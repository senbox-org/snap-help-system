Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># snap-help-system\nThe help system for SNAP based on NetBeans\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision d171ebd532fe09019f5c013d299942c788d5c392)
+++ b/README.md	(date 1683622764560)
@@ -1,2 +1,9 @@
 # snap-help-system
 The help system for SNAP based on NetBeans
+
+This module is mainly a copy of the [org-netbeans-modules-javahelp](https://github.com/apache/netbeans/tree/11.3/platform/javahelp/src/org/netbeans/modules/javahelp).
+The version 11.3 has been used as basis. This copy was necessary as the support for javahelp was disabled due to license incompatibilities.
+Those license conflicts between Apache (NetBeans) and GPL (JavaHelp) seem to be solved and NetBeans might reactivate the help in the future (version >=18).
+Till than we need this module, and we don't have the license issue as SNAP is GPL too.
+
+Differences between the original and this module are mainly in package names.
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645257)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd	(date 1683618645257)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- An Index.  It is versioned -->
+
+        <!ELEMENT index (indexitem*)>
+        <!ATTLIST index version CDATA #FIXED "1.0">
+        <!ATTLIST index xml:lang CDATA #IMPLIED>
+
+        <!-- an item -->
+
+        <!ELEMENT indexitem (#PCDATA | indexitem)*>
+        <!ATTLIST indexitem xml:lang CDATA #IMPLIED>
+        <!ATTLIST indexitem text CDATA #IMPLIED>
+        <!ATTLIST indexitem image CDATA #IMPLIED>
+        <!ATTLIST indexitem target CDATA #IMPLIED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+         -->
Index: target/classes/META-INF/namedservices/URLStreamHandler/nbdocs/java.net.URLStreamHandler
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/META-INF/namedservices/URLStreamHandler/nbdocs/java.net.URLStreamHandler b/target/classes/META-INF/namedservices/URLStreamHandler/nbdocs/java.net.URLStreamHandler
new file mode 100644
--- /dev/null	(date 1683622264837)
+++ b/target/classes/META-INF/namedservices/URLStreamHandler/nbdocs/java.net.URLStreamHandler	(date 1683622264837)
@@ -0,0 +1,1 @@
+eu.esa.snap.netbeans.javahelp.NbDocsStreamHandler
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645307)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd	(date 1683618645307)
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- An Index.  It is versioned -->
+
+        <!ELEMENT index (indexitem*)>
+        <!ATTLIST index version (1.0 | 2.0) #IMPLIED>
+        <!ATTLIST index xml:lang CDATA #IMPLIED>
+
+        <!-- an item -->
+
+        <!ELEMENT indexitem (#PCDATA | indexitem)*>
+        <!ATTLIST indexitem xml:lang CDATA #IMPLIED>
+        <!ATTLIST indexitem text CDATA #IMPLIED>
+        <!ATTLIST indexitem target CDATA #IMPLIED>
+        <!ATTLIST indexitem mergetype CDATA #IMPLIED>
+        <!ATTLIST indexitem expand (true | false ) #IMPLIED>
+        <!ATTLIST indexitem presentationtype CDATA #IMPLIED>
+        <!ATTLIST indexitem presentationname CDATA #IMPLIED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+          Added mergetype attribute into indexitem -rgregor 6 June '01
+         -->
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645246)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd	(date 1683618645246)
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- It is versioned -->
+
+        <!ELEMENT favorites (favoriteitem)*>
+        <!ATTLIST favorites
+                version CDATA #FIXED "2.0"
+                xml:lang CDATA #IMPLIED
+                >
+
+        <!-- an item -->
+
+        <!ELEMENT favoriteitem (#PCDATA |favoriteitem)*>
+        <!ATTLIST favoriteitem
+                xml:lang CDATA #IMPLIED
+                hstitle CDATA #IMPLIED
+                url CDATA #IMPLIED
+                target CDATA #IMPLIED
+                text CDATA #IMPLIED
+                >
+        <!--
+          Change list:
+
+          Created - Richard Gregor, 28 August '01
+
+         -->
Index: target/classes/META-INF/generated-layer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/META-INF/generated-layer.xml b/target/classes/META-INF/generated-layer.xml
new file mode 100644
--- /dev/null	(date 1683622264834)
+++ b/target/classes/META-INF/generated-layer.xml	(date 1683622264834)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.2//EN" "http://www.netbeans.org/dtds/filesystem-1_2.dtd">
+<filesystem>
+    <folder name="Actions">
+        <folder name="Help">
+            <file name="eu-esa-snap-netbeans-javahelp-HelpAction.instance">
+                <!--eu.esa.snap.netbeans.javahelp.HelpAction-->
+                <attr bundlevalue="eu.esa.snap.netbeans.javahelp.Bundle#LBL_HelpAction" name="displayName"/>
+                <attr name="instanceCreate" newvalue="eu.esa.snap.netbeans.javahelp.HelpAction"/>
+            </file>
+        </folder>
+    </folder>
+    <folder name="Shortcuts">
+        <file name="F1.shadow">
+            <!--eu.esa.snap.netbeans.javahelp.HelpAction-->
+            <attr name="originalFile" stringvalue="Actions/Help/eu-esa-snap-netbeans-javahelp-HelpAction.instance"/>
+        </file>
+    </folder>
+</filesystem>
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645264)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd	(date 1683618645264)
@@ -0,0 +1,76 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A HelpSet.  It is versioned -->
+
+        <!ELEMENT helpset (title, maps, view+, subhelpset*)>
+        <!ATTLIST helpset version CDATA #FIXED "1.0">
+        <!ATTLIST helpset xml:lang CDATA #IMPLIED>
+
+
+        <!-- The title. -->
+
+        <!ELEMENT title (#PCDATA)>
+
+
+        <!-- Maps between ids and urls for this helpset -->
+        <!-- there is a bug in JH1.0 that forces a single map -->
+
+        <!ELEMENT maps (homeID, mapref+)>
+        <!ELEMENT homeID (#PCDATA)>
+        <!ELEMENT mapref EMPTY>
+        <!ATTLIST mapref location CDATA #REQUIRED>
+
+
+        <!-- Views into the information -->
+
+        <!ELEMENT view (name | label | type | data?)*>
+        <!ATTLIST view xml:lang CDATA #IMPLIED>
+        <!ELEMENT name (#PCDATA)>
+        <!ELEMENT label (#PCDATA)>
+        <!ELEMENT type (#PCDATA)>
+        <!ELEMENT data (#PCDATA)>
+        <!ATTLIST data engine CDATA #IMPLIED>
+
+
+        <!-- Subhelpsets to merge "statically" -->
+
+        <!ELEMENT subhelpset EMPTY>
+        <!ATTLIST subhelpset location CDATA #IMPLIED>
+
+
+        <!--
+          Change list:
+
+          Cleanup to be more XML-ish - epll, 15 Dec '98
+          xml:lang attributes for title, label, and name are no more.
+          engine is now an attribute of data.
+          impl is no more; use PI's instead.
+          data inside map is now the map tag.
+
+          More cleanup - epll, 16 Dec '98
+          moved homeID into map
+          made data inside map be mapref (for map reference)
+
+         -->
Index: target/classes/eu/esa/snap/netbeans/javahelp/Bundle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/Bundle.properties b/target/classes/eu/esa/snap/netbeans/javahelp/Bundle.properties
new file mode 100644
--- /dev/null	(date 1683621319669)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/Bundle.properties	(date 1683621319669)
@@ -0,0 +1,47 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#   http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# Help system
+# {0} - URL
+EXC_nbdocs_cannot_connect=Could not connect to URL {0}; no such resource was found.
+# JavaHelp
+# {0} - ID
+MSG_jh_id_not_found=Warning: the JavaHelp topic ID {0} was not found.
+#LBL_Empty_HelpComponent=<JavaHelp not found>
+# master index menu item
+#LBL_MasterIndex=Master Index
+TITLE_loading_help_sets=Loading help sets...
+ACSD_JavaHelp_viewer=Displays one or more online help references in JavaHelp format
+ACSD_Loading_Dialog=Loading help sets
+# HelpAction
+LBL_HelpAction=Help
+CTL_OpeningHelp=Opening Help...
+# Display name of known modules
+org.netbeans.modules.web.monitor=HTTP Monitor
+# a11y - BrowserDisplayer
+ACSD_Label=Click here to open this link in a web browser.
+# log messages
+# {0} HelpCtx of the help to be shown
+LOG_SHOWING_HELP=Showing help ID: {0}
+#NOI18N
+LOG_SHOWING_HELP_ICON_BASE=eu/esa/snap/netbeans/javahelp/resources/help.png
+# usage logging
+# {0} HelpCtx of the help to be shown
+USG_HELP_SHOW=Showing help ID: {0}
+QuickSearch/Help=Help
+Err_CreateJavaHelpSearchEngine=Failed to create JavaHelp search engine.
+# Copy link location action
+LBL_CopyLinkLocationAction=Copy Link Location
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645261)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd	(date 1683618645261)
@@ -0,0 +1,113 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A HelpSet.  It is versioned -->
+
+        <!ELEMENT helpset (title, maps, view+, subhelpset*, presentation*, impl?)>
+        <!ATTLIST helpset version ( 1.0 | 2.0) #IMPLIED>
+        <!ATTLIST helpset xml:lang CDATA #IMPLIED>
+
+
+        <!-- The title. -->
+
+        <!ELEMENT title (#PCDATA)>
+
+
+        <!-- Maps between ids and urls for this helpset -->
+        <!-- there is a bug in JH1.0 that forces a single map -->
+
+        <!ELEMENT maps (homeID, mapref+)>
+        <!ELEMENT homeID (#PCDATA)>
+        <!ELEMENT mapref EMPTY>
+        <!ATTLIST mapref location CDATA #REQUIRED>
+
+
+        <!-- Views into the information -->
+
+        <!ELEMENT view (name | label | image? | type | data?)*>
+        <!ATTLIST view xml:lang CDATA #IMPLIED>
+        <!ATTLIST view mergetype CDATA #IMPLIED>
+        <!ELEMENT name (#PCDATA)>
+        <!ELEMENT label (#PCDATA)>
+        <!ELEMENT image (#PCDATA)>
+        <!ELEMENT type (#PCDATA)>
+        <!ELEMENT data (#PCDATA)>
+        <!ATTLIST data engine CDATA #IMPLIED>
+
+
+        <!-- Subhelpsets to merge "statically" -->
+
+        <!ELEMENT subhelpset EMPTY>
+        <!ATTLIST subhelpset location CDATA #IMPLIED>
+
+
+        <!-- Presentation of the HelpSet -->
+
+        <!ELEMENT presentation (name, size?, location?, title?, image?, toolbar?)*>
+        <!ATTLIST presentation xml:lang CDATA #IMPLIED>
+        <!ATTLIST presentation default (true | false) #IMPLIED>
+        <!ATTLIST presentation displayviews (true | false) #IMPLIED>
+        <!ATTLIST presentation displayviewimages (true | false) #IMPLIED>
+        <!ELEMENT size EMPTY>
+        <!ATTLIST size width CDATA #REQUIRED>
+        <!ATTLIST size height CDATA #REQUIRED>
+        <!ELEMENT location EMPTY>
+        <!ATTLIST location x CDATA #REQUIRED>
+        <!ATTLIST location y CDATA #REQUIRED>
+        <!ELEMENT toolbar (helpaction*)>
+        <!ELEMENT helpaction (#PCDATA)>
+        <!ATTLIST helpaction image CDATA #IMPLIED>
+
+        <!-- Implementation specific data -->
+
+        <!ELEMENT impl (helpsetregistry?, viewerregistry*)>
+        <!ELEMENT helpsetregistry EMPTY>
+        <!ATTLIST helpsetregistry helpbrokerclass CDATA #REQUIRED>
+        <!ELEMENT viewerregistry EMPTY>
+        <!ATTLIST viewerregistry viewertype CDATA #REQUIRED>
+        <!ATTLIST viewerregistry viewerclass CDATA #REQUIRED>
+
+        <!--
+
+          Change list:
+
+          Cleanup to be more XML-ish - epll, 15 Dec '98
+          xml:lang attributes for title, label, and name are no more.
+          engine is now an attribute of data.
+          impl is no more; use PI's instead.
+          data inside map is now the map tag.
+
+          More cleanup - epll, 16 Dec '98
+          moved homeID into map
+          made data inside map be mapref (for map reference)
+
+          Added mergetype attribute into view - rgregor 6 June '01
+
+          Added versions
+
+          Added presentation
+
+          Added impl
+
+         -->
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/master-help.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/master-help.xml b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/master-help.xml
new file mode 100644
--- /dev/null	(date 1683618975178)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/master-help.xml	(date 1683618975178)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE helpctx PUBLIC
+        "-//NetBeans//DTD Help Context 1.0//EN"
+        "http://www.netbeans.org/dtds/helpcontext-1_0.dtd">
+<helpctx id="eu.esa.snap.netbeans.javahelp.MASTER_ID" showmaster="true"/>
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
new file mode 100644
--- /dev/null	(date 1683622263892)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(date 1683622263892)
@@ -0,0 +1,19 @@
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\JavaHelp.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\api\Help.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\JavaHelpQuery.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\NbDocsStreamHandler.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\HelpSetRegistrationProcessor.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\HelpAction.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\Installer.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\JavaHelpQuickSearchProviderImpl.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\BrowserDisplayer.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\HelpSetProcessor.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\api\HelpUtils.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\HelpConstants.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\Utils.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\AbstractHelp.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\CopyLinkLocationAction.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\HelpCtxProcessor.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\api\HelpSetRegistration.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\HyperlinkEventProcessor.java
+C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system\src\main\java\eu\esa\snap\netbeans\javahelp\BrowserDisplayerBeanInfo.java
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties
new file mode 100644
--- /dev/null	(date 1683618645240)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties	(date 1683618645240)
@@ -0,0 +1,25 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#   http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+OpenIDE-Module-Name=JavaHelp Integration
+OpenIDE-Module-Display-Category=Infrastructure
+OpenIDE-Module-Short-Description=Permits JavaHelp help sets to be added to the IDE.
+OpenIDE-Module-Long-Description=\
+    Contains the actual JavaHelp runtime library, and the implementation of the part of \
+    the Modules API which permits other modules to install help sets using JavaHelp technology.
+Menu/Help/master-help.xml=Help &Contents
+Menu/Help/HelpShortcuts=Help &Sets
+Actions/Help/master-help.xml=Help &Contents
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645246)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd	(date 1683618645246)
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- It is versioned -->
+
+        <!ELEMENT favorites (favoriteitem)*>
+        <!ATTLIST favorites
+                version CDATA #FIXED "2.0"
+                xml:lang CDATA #IMPLIED
+                >
+
+        <!-- an item -->
+
+        <!ELEMENT favoriteitem (#PCDATA |favoriteitem)*>
+        <!ATTLIST favoriteitem
+                xml:lang CDATA #IMPLIED
+                hstitle CDATA #IMPLIED
+                url CDATA #IMPLIED
+                target CDATA #IMPLIED
+                text CDATA #IMPLIED
+                >
+        <!--
+          Change list:
+
+          Created - Richard Gregor, 28 August '01
+
+         -->
Index: target/nbm/netbeans/extra/update_tracking/eu-esa-snap-netbeans-snap-help-system.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/nbm/netbeans/extra/update_tracking/eu-esa-snap-netbeans-snap-help-system.xml b/target/nbm/netbeans/extra/update_tracking/eu-esa-snap-netbeans-snap-help-system.xml
new file mode 100644
--- /dev/null	(date 1683622266374)
+++ b/target/nbm/netbeans/extra/update_tracking/eu-esa-snap-netbeans-snap-help-system.xml	(date 1683622266374)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?><module codename="eu.esa.snap.netbeans.snap.help.system">
+    <module_version install_time="1683622266301" last="true" origin="installer" specification_version="1.0.0">
+        <file crc="1373068388" name="config/Modules/eu-esa-snap-netbeans-snap-help-system.xml"/>
+        <file crc="399733953" name="modules/eu-esa-snap-netbeans-snap-help-system.jar"/>
+        <file crc="2526228326" name="modules/ext/eu.esa.snap.netbeans.snap-help-system/javax-help/javahelp.jar"/>
+    </module_version>
+</module>
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html b/target/classes/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html
new file mode 100644
--- /dev/null	(date 1683618646662)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html	(date 1683618646662)
@@ -0,0 +1,36 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<html>
+<head>
+    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
+    <title>Module Not Installed</title>
+    <link href="nbdocs://org.netbeans.modules.usersguide/org/netbeans/modules/usersguide/ide.css" rel="StyleSheet"
+          type="text/css">
+</head>
+<body>
+<h2>Module Not Installed</h2>
+<p>The help topic you are trying to view is located in the {0} module,
+    which is not currently installed. This module might be available
+    as a plugin. To check, choose
+    Tools &gt; Plugins.
+</p>
+</body>
+</html>
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm
new file mode 100644
--- /dev/null	(date 1683618975165)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm	(date 1683618975165)
@@ -0,0 +1,33 @@
+<?xml version='1.0' encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE map PUBLIC "-//Sun Microsystems Inc.//DTD JavaHelp Map Version 2.0//EN"
+        "http://java.sun.com/products/javahelp/map_2_0.dtd">
+<map version="2.0">
+    <mapID target="eu.esa.snap.netbeans.javahelp.MASTER_ID" url="masterHelpPage.html"/>
+    <mapID target="helpviewer_back" url="helpviewer_back.png"/>
+    <mapID target="helpviewer_forward" url="helpviewer_forward.png"/>
+    <mapID target="helpviewer_page-setup" url="helpviewer_page-setup.png"/>
+    <mapID target="helpviewer_print" url="helpviewer_print.png"/>
+    <mapID target="helpviewer_book-open" url="helpviewer_book-open.png"/>
+    <mapID target="helpviewer_topic" url="helpviewer_topic.png"/>
+    <mapID target="helpviewer_book-closed" url="helpviewer_book-closed.png"/>
+</map>
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml
new file mode 100644
--- /dev/null	(date 1683618975174)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml	(date 1683618975174)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE helpset PUBLIC "-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 2.0//EN"
+        "http://java.sun.com/products/javahelp/helpset_2_0.dtd">
+<helpset version="2.0">
+    <title>Help</title>
+    <maps>
+        <homeID>eu.esa.snap.netbeans.javahelp.MASTER_ID</homeID>
+        <mapref location="masterHelpMap.jhm"/>
+    </maps>
+    <view mergetype="javax.help.UniteAppendMerge">
+        <name>TOC</name>
+        <label>Contents</label>
+        <type>javax.help.TOCView</type>
+        <data>masterHelpToc.xml</data>
+    </view>
+    <!--    <view mergetype="javax.help.SortMerge">-->
+    <!--        <name>Index</name>-->
+    <!--        <label>Index</label>-->
+    <!--        <type>javax.help.IndexView</type>-->
+    <!--    </view>-->
+    <view>
+        <name>Search</name>
+        <label>Search</label>
+        <type>javax.help.SearchView</type>
+    </view>
+    <!--
+    <view>
+        <name>Favorites</name>
+        <label>Favorites</label>
+        <type>javax.help.FavoritesView</type>
+    </view>
+    -->
+    <presentation default="true" displayviews="true" displayviewimages="false">
+        <name>main window</name>
+        <toolbar>
+            <helpaction image="helpviewer_back">javax.help.BackAction</helpaction>
+            <helpaction image="helpviewer_forward">javax.help.ForwardAction</helpaction>
+            <helpaction image="helpviewer_print">javax.help.PrintAction</helpaction>
+            <helpaction image="helpviewer_page-setup">javax.help.PrintSetupAction</helpaction>
+        </toolbar>
+    </presentation>
+    <presentation displayviews="false">
+        <name>NBSecondaryWindow</name>
+        <size width="600" height="400"/>
+        <location x="200" y="200"/>
+    </presentation>
+
+</helpset>
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml
new file mode 100644
--- /dev/null	(date 1683618645299)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml	(date 1683618645299)
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE toc PUBLIC "-//Sun Microsystems Inc.//DTD JavaHelp TOC Version 2.0//EN"
+        "http://java.sun.com/products/javahelp/toc_2_0.dtd">
+<toc version="2.0" categoryclosedimage="helpviewer_book-closed" categoryopenimage="helpviewer_book-open"
+     topicimage="helpviewer_topic">
+</toc>
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645356)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd	(date 1683618645356)
@@ -0,0 +1,32 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+        <!--
+        -//NetBeans//DTD JavaHelp Help Set Reference 1.0//EN
+        http://www.netbeans.org/dtds/helpsetref-1_0.dtd
+        Reference to a JavaHelp .hs file, optionally merged into master set.
+        Example usage:
+        <helpsetref url="nbdocs:/org/netbeans/modules/foo/help/HelpSet.hs"/>
+        -->
+        <!ELEMENT helpsetref EMPTY>
+        <!ATTLIST helpsetref
+                url CDATA #REQUIRED
+                merge (true | false) "true"
+                >
Index: target/classes/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help b/target/classes/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help
new file mode 100644
--- /dev/null	(date 1683619034454)
+++ b/target/classes/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help	(date 1683619034454)
@@ -0,0 +1,1 @@
+eu.esa.snap.netbeans.javahelp.JavaHelp
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645342)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd	(date 1683618645342)
@@ -0,0 +1,34 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+        <!--
+        -//NetBeans//DTD Help Context 1.0//EN
+        http://www.netbeans.org/dtds/helpcontext-1_0.dtd
+        A JavaHelp help ID which could be used in a menu, etc.
+        May optionally display whole master help set, otherwise
+        just shows the help set in which the ID is defined.
+        Example usage:
+        <helpctx id="org.netbeans.modules.foo.some-topic"/>
+        -->
+        <!ELEMENT helpctx EMPTY>
+        <!ATTLIST helpctx
+                id CDATA #REQUIRED
+                showmaster (true | false) "false"
+                >
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645342)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd	(date 1683618645342)
@@ -0,0 +1,34 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+        <!--
+        -//NetBeans//DTD Help Context 1.0//EN
+        http://www.netbeans.org/dtds/helpcontext-1_0.dtd
+        A JavaHelp help ID which could be used in a menu, etc.
+        May optionally display whole master help set, otherwise
+        just shows the help set in which the ID is defined.
+        Example usage:
+        <helpctx id="org.netbeans.modules.foo.some-topic"/>
+        -->
+        <!ELEMENT helpctx EMPTY>
+        <!ATTLIST helpctx
+                id CDATA #REQUIRED
+                showmaster (true | false) "false"
+                >
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645264)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd	(date 1683618645264)
@@ -0,0 +1,76 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A HelpSet.  It is versioned -->
+
+        <!ELEMENT helpset (title, maps, view+, subhelpset*)>
+        <!ATTLIST helpset version CDATA #FIXED "1.0">
+        <!ATTLIST helpset xml:lang CDATA #IMPLIED>
+
+
+        <!-- The title. -->
+
+        <!ELEMENT title (#PCDATA)>
+
+
+        <!-- Maps between ids and urls for this helpset -->
+        <!-- there is a bug in JH1.0 that forces a single map -->
+
+        <!ELEMENT maps (homeID, mapref+)>
+        <!ELEMENT homeID (#PCDATA)>
+        <!ELEMENT mapref EMPTY>
+        <!ATTLIST mapref location CDATA #REQUIRED>
+
+
+        <!-- Views into the information -->
+
+        <!ELEMENT view (name | label | type | data?)*>
+        <!ATTLIST view xml:lang CDATA #IMPLIED>
+        <!ELEMENT name (#PCDATA)>
+        <!ELEMENT label (#PCDATA)>
+        <!ELEMENT type (#PCDATA)>
+        <!ELEMENT data (#PCDATA)>
+        <!ATTLIST data engine CDATA #IMPLIED>
+
+
+        <!-- Subhelpsets to merge "statically" -->
+
+        <!ELEMENT subhelpset EMPTY>
+        <!ATTLIST subhelpset location CDATA #IMPLIED>
+
+
+        <!--
+          Change list:
+
+          Cleanup to be more XML-ish - epll, 15 Dec '98
+          xml:lang attributes for title, label, and name are no more.
+          engine is now an attribute of data.
+          impl is no more; use PI's instead.
+          data inside map is now the map tag.
+
+          More cleanup - epll, 16 Dec '98
+          moved homeID into map
+          made data inside map be mapref (for map reference)
+
+         -->
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm b/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm
new file mode 100644
--- /dev/null	(date 1683618975165)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm	(date 1683618975165)
@@ -0,0 +1,33 @@
+<?xml version='1.0' encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE map PUBLIC "-//Sun Microsystems Inc.//DTD JavaHelp Map Version 2.0//EN"
+        "http://java.sun.com/products/javahelp/map_2_0.dtd">
+<map version="2.0">
+    <mapID target="eu.esa.snap.netbeans.javahelp.MASTER_ID" url="masterHelpPage.html"/>
+    <mapID target="helpviewer_back" url="helpviewer_back.png"/>
+    <mapID target="helpviewer_forward" url="helpviewer_forward.png"/>
+    <mapID target="helpviewer_page-setup" url="helpviewer_page-setup.png"/>
+    <mapID target="helpviewer_print" url="helpviewer_print.png"/>
+    <mapID target="helpviewer_book-open" url="helpviewer_book-open.png"/>
+    <mapID target="helpviewer_topic" url="helpviewer_topic.png"/>
+    <mapID target="helpviewer_book-closed" url="helpviewer_book-closed.png"/>
+</map>
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html
new file mode 100644
--- /dev/null	(date 1683618646674)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html	(date 1683618646674)
@@ -0,0 +1,33 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+
+<HTML>
+<head>
+    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
+    <TITLE>Master Index</TITLE>
+</HEAD>
+<BODY>
+This window contains the master set of all installed documentation.
+You can use the navigators to the left to browse the IDE's complete
+table of contents and index, and perform whole-documentation search
+on the index and full-text search.
+</BODY>
+</HTML>
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645233)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd	(date 1683618645233)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A Map.  It is versioned -->
+
+        <!ELEMENT map (mapID*)>
+        <!ATTLIST map version CDATA #FIXED "1.0">
+        <!ATTLIST map xml:lang CDATA #IMPLIED>
+
+        <!-- an map ID pair -->
+
+        <!ELEMENT mapID EMPTY>
+        <!ATTLIST mapID xml:lang CDATA #IMPLIED>
+        <!ATTLIST mapID target CDATA #REQUIRED>
+        <!ATTLIST mapID url CDATA #REQUIRED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+         -->
Index: src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuickSearchProviderImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuickSearchProviderImpl.java b/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuickSearchProviderImpl.java
new file mode 100644
--- /dev/null	(date 1683618975129)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuickSearchProviderImpl.java	(date 1683618975129)
@@ -0,0 +1,68 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import eu.esa.snap.netbeans.javahelp.api.Help;
+import org.netbeans.spi.quicksearch.SearchProvider;
+import org.netbeans.spi.quicksearch.SearchRequest;
+import org.netbeans.spi.quicksearch.SearchResponse;
+import org.openide.util.Lookup;
+
+import javax.help.SearchTOCItem;
+import java.awt.Toolkit;
+import java.net.URL;
+import java.util.List;
+
+/**
+ * QuickSearch provider for IDE's JavaHelp topics.
+ *
+ * @author S. Aubrecht
+ */
+public class JavaHelpQuickSearchProviderImpl implements SearchProvider {
+
+    private JavaHelpQuery query;
+
+    public void evaluate(SearchRequest request, SearchResponse response) {
+        synchronized (this) {
+            if (null == query) {
+                query = JavaHelpQuery.getDefault();
+            }
+        }
+        List<SearchTOCItem> res = query.search(request.getText());
+        for (SearchTOCItem item : res) {
+            if (!response.addResult(createAction(item.getURL()), item.getName()))
+                return;
+        }
+    }
+
+    private Runnable createAction(final URL url) {
+        return new Runnable() {
+            public void run() {
+                Help h = (Help) Lookup.getDefault().lookup(Help.class);
+                if (h != null && h instanceof JavaHelp) {
+                    JavaHelp jh = (JavaHelp) h;
+                    jh.showHelp(url);
+                } else {
+                    Toolkit.getDefaultToolkit().beep();
+                }
+            }
+        };
+    }
+}
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645307)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd	(date 1683618645307)
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- An Index.  It is versioned -->
+
+        <!ELEMENT index (indexitem*)>
+        <!ATTLIST index version (1.0 | 2.0) #IMPLIED>
+        <!ATTLIST index xml:lang CDATA #IMPLIED>
+
+        <!-- an item -->
+
+        <!ELEMENT indexitem (#PCDATA | indexitem)*>
+        <!ATTLIST indexitem xml:lang CDATA #IMPLIED>
+        <!ATTLIST indexitem text CDATA #IMPLIED>
+        <!ATTLIST indexitem target CDATA #IMPLIED>
+        <!ATTLIST indexitem mergetype CDATA #IMPLIED>
+        <!ATTLIST indexitem expand (true | false ) #IMPLIED>
+        <!ATTLIST indexitem presentationtype CDATA #IMPLIED>
+        <!ATTLIST indexitem presentationname CDATA #IMPLIED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+          Added mergetype attribute into indexitem -rgregor 6 June '01
+         -->
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml b/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml
new file mode 100644
--- /dev/null	(date 1683618975174)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml	(date 1683618975174)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE helpset PUBLIC "-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 2.0//EN"
+        "http://java.sun.com/products/javahelp/helpset_2_0.dtd">
+<helpset version="2.0">
+    <title>Help</title>
+    <maps>
+        <homeID>eu.esa.snap.netbeans.javahelp.MASTER_ID</homeID>
+        <mapref location="masterHelpMap.jhm"/>
+    </maps>
+    <view mergetype="javax.help.UniteAppendMerge">
+        <name>TOC</name>
+        <label>Contents</label>
+        <type>javax.help.TOCView</type>
+        <data>masterHelpToc.xml</data>
+    </view>
+    <!--    <view mergetype="javax.help.SortMerge">-->
+    <!--        <name>Index</name>-->
+    <!--        <label>Index</label>-->
+    <!--        <type>javax.help.IndexView</type>-->
+    <!--    </view>-->
+    <view>
+        <name>Search</name>
+        <label>Search</label>
+        <type>javax.help.SearchView</type>
+    </view>
+    <!--
+    <view>
+        <name>Favorites</name>
+        <label>Favorites</label>
+        <type>javax.help.FavoritesView</type>
+    </view>
+    -->
+    <presentation default="true" displayviews="true" displayviewimages="false">
+        <name>main window</name>
+        <toolbar>
+            <helpaction image="helpviewer_back">javax.help.BackAction</helpaction>
+            <helpaction image="helpviewer_forward">javax.help.ForwardAction</helpaction>
+            <helpaction image="helpviewer_print">javax.help.PrintAction</helpaction>
+            <helpaction image="helpviewer_page-setup">javax.help.PrintSetupAction</helpaction>
+        </toolbar>
+    </presentation>
+    <presentation displayviews="false">
+        <name>NBSecondaryWindow</name>
+        <size width="600" height="400"/>
+        <location x="200" y="200"/>
+    </presentation>
+
+</helpset>
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645257)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd	(date 1683618645257)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- An Index.  It is versioned -->
+
+        <!ELEMENT index (indexitem*)>
+        <!ATTLIST index version CDATA #FIXED "1.0">
+        <!ATTLIST index xml:lang CDATA #IMPLIED>
+
+        <!-- an item -->
+
+        <!ELEMENT indexitem (#PCDATA | indexitem)*>
+        <!ATTLIST indexitem xml:lang CDATA #IMPLIED>
+        <!ATTLIST indexitem text CDATA #IMPLIED>
+        <!ATTLIST indexitem image CDATA #IMPLIED>
+        <!ATTLIST indexitem target CDATA #IMPLIED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+         -->
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
new file mode 100644
--- /dev/null	(date 1683622265354)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1683622265354)
@@ -0,0 +1,45 @@
+eu\esa\snap\netbeans\javahelp\api\HelpUtils.class
+eu\esa\snap\netbeans\javahelp\HelpAction$WindowActivatedDetector.class
+eu\esa\snap\netbeans\javahelp\HelpCtxProcessor.class
+eu\esa\snap\netbeans\javahelp\JavaHelpQuery$SynchronizedSearchListener.class
+eu\esa\snap\netbeans\javahelp\JavaHelpQuickSearchProviderImpl.class
+eu\esa\snap\netbeans\javahelp\api\Help.class
+eu\esa\snap\netbeans\javahelp\CopyLinkLocationAction.class
+eu\esa\snap\netbeans\javahelp\HelpSetProcessor.class
+eu\esa\snap\netbeans\javahelp\NbDocsStreamHandler$InfoURLConnection.class
+eu\esa\snap\netbeans\javahelp\HelpAction.class
+eu\esa\snap\netbeans\javahelp\HelpSetRegistrationProcessor.class
+eu\esa\snap\netbeans\javahelp\NbDocsStreamHandler.class
+META-INF\generated-layer.xml
+eu\esa\snap\netbeans\javahelp\JavaHelp$1.class
+eu\esa\snap\netbeans\javahelp\JavaHelpQuery.class
+eu\esa\snap\netbeans\javahelp\Installer.class
+eu\esa\snap\netbeans\javahelp\AbstractHelp.class
+eu\esa\snap\netbeans\javahelp\JavaHelpQuery$DummySearchQuery.class
+eu\esa\snap\netbeans\javahelp\JavaHelpQuickSearchProviderImpl$1.class
+eu\esa\snap\netbeans\javahelp\HelpAction$1.class
+eu\esa\snap\netbeans\javahelp\HelpCtxProcessor$ShortcutAction.class
+eu\esa\snap\netbeans\javahelp\CopyLinkLocationAction$LinkOwner.class
+eu\esa\snap\netbeans\javahelp\HelpConstants.class
+eu\esa\snap\netbeans\javahelp\JavaHelp$ProgressDialog.class
+eu\esa\snap\netbeans\javahelp\AbstractHelp$2.class
+eu\esa\snap\netbeans\javahelp\BrowserDisplayerBeanInfo.class
+eu\esa\snap\netbeans\javahelp\BrowserDisplayer$1.class
+eu\esa\snap\netbeans\javahelp\JavaHelp$3.class
+eu\esa\snap\netbeans\javahelp\BrowserDisplayer.class
+eu\esa\snap\netbeans\javahelp\JavaHelpQuery$DummySearchEngine.class
+eu\esa\snap\netbeans\javahelp\api\HelpSetRegistration.class
+eu\esa\snap\netbeans\javahelp\Utils.class
+META-INF\services\javax.annotation.processing.Processor
+eu\esa\snap\netbeans\javahelp\HelpCtxProcessor$ShortcutAction$1.class
+eu\esa\snap\netbeans\javahelp\HelpCtxProcessor$ShortcutAction$1$1.class
+eu\esa\snap\netbeans\javahelp\NbDocsStreamHandler$NbDocsURLConnection.class
+eu\esa\snap\netbeans\javahelp\JavaHelp.class
+eu\esa\snap\netbeans\javahelp\AbstractHelp$1.class
+eu\esa\snap\netbeans\javahelp\HyperlinkEventProcessor.class
+META-INF\namedservices\URLStreamHandler\nbdocs\java.net.URLStreamHandler
+eu\esa\snap\netbeans\javahelp\HelpCtxProcessor$1.class
+eu\esa\snap\netbeans\javahelp\JavaHelp$2.class
+eu\esa\snap\netbeans\javahelp\HelpSetProcessor$1.class
+eu\esa\snap\netbeans\javahelp\HelpSetRegistrationProcessor$1.class
+eu\esa\snap\netbeans\javahelp\JavaHelpQuery$1.class
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645356)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd	(date 1683618645356)
@@ -0,0 +1,32 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+        <!--
+        -//NetBeans//DTD JavaHelp Help Set Reference 1.0//EN
+        http://www.netbeans.org/dtds/helpsetref-1_0.dtd
+        Reference to a JavaHelp .hs file, optionally merged into master set.
+        Example usage:
+        <helpsetref url="nbdocs:/org/netbeans/modules/foo/help/HelpSet.hs"/>
+        -->
+        <!ELEMENT helpsetref EMPTY>
+        <!ATTLIST helpsetref
+                url CDATA #REQUIRED
+                merge (true | false) "true"
+                >
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/layer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/layer.xml b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/layer.xml
new file mode 100644
--- /dev/null	(date 1683621127032)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/layer.xml	(date 1683621127032)
@@ -0,0 +1,123 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.1//EN" "https://www.netbeans.org/dtds/filesystem-1_1.dtd">
+<filesystem>
+    <folder name="Menu">
+        <folder name="Help">
+            <file name="master-help.xml" url="master-help.xml">
+                <attr name="SystemFileSystem.localizingBundle" stringvalue="eu.esa.snap.netbeans.javahelp.resources.Bundle"/>
+                <attr name="position" intvalue="200"/>
+            </file>
+        </folder>
+    </folder>
+    <folder name="Actions">
+        <folder name="Help">
+            <file name="master-help.xml" url="master-help.xml">
+                <attr name="SystemFileSystem.localizingBundle" stringvalue="eu.esa.snap.netbeans.javahelp.resources.Bundle"/>
+                <attr name="iconBase" stringvalue="eu/esa/snap/netbeans/javahelp/resources/help.png"/>
+            </file>
+        </folder>
+    </folder>
+    <folder name="Services">
+        <folder name="JavaHelp">
+            <attr name="hidden" boolvalue="false"/>
+        </folder>
+    </folder>
+    <folder name="xml">
+        <folder name="entities">
+            <folder name="Sun_Microsystems_Inc_">
+                <file name="DTD_JavaHelp_HelpSet_Version_1_0" url="helpset_1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 1.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Map_Version_1_0" url="map_1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Map Version 1.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_TOC_Version_1_0" url="toc_1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp TOC Version 1.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Index_Version_1_0" url="index_1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Index Version 1.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_HelpSet_Version_2_0" url="helpset_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 2.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Map_Version_2_0" url="map_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Map Version 2.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_TOC_Version_2_0" url="toc_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp TOC Version 2.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Index_Version_2_0" url="index_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Index Version 2.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Favorites_Version_2_0" url="favorites_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Favorites Version 2.0//EN"/>
+                </file>
+            </folder>
+            <folder name="NetBeans">
+                <file name="DTD_JavaHelp_Help_Set_Reference_1_0" url="helpsetref-1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//NetBeans//DTD JavaHelp Help Set Reference 1.0//EN"/>
+                </file>
+                <file name="DTD_Help_Context_1_0" url="helpcontext-1_0.dtd">
+                    <attr name="hint.originalPublicID" stringvalue="-//NetBeans//DTD Help Context 1.0//EN"/>
+                </file>
+            </folder>
+        </folder>
+        <folder name="lookups">
+            <folder name="NetBeans">
+                <file name="DTD_JavaHelp_Help_Set_Reference_1_0.instance">
+                    <attr name="instanceOf" stringvalue="org.openide.loaders.Environment$Provider"/>
+                    <attr name="instanceCreate" newvalue="eu.esa.snap.netbeans.javahelp.HelpSetProcessor"/>
+                </file>
+                <file name="DTD_Help_Context_1_0.instance">
+                    <attr name="instanceOf" stringvalue="org.openide.loaders.Environment$Provider"/>
+                    <attr name="instanceCreate" newvalue="eu.esa.snap.netbeans.javahelp.HelpCtxProcessor"/>
+                </file>
+            </folder>
+        </folder>
+    </folder>
+
+    <folder name="QuickSearch">
+        <folder name="Help">
+            <!--              Attribute for localization - provide localized display name of category!-->
+            <attr name="SystemFileSystem.localizingBundle" stringvalue="eu.esa.snap.netbeans.javahelp.Bundle"/>
+            <!--              Attribute for command prefix - used to narrow search to this category only!-->
+            <attr name="command" stringvalue="h"/>
+            <!--              Attribute for category ordering!-->
+            <attr name="position" intvalue="1000"/>
+            <!--              Note that multiple providers can contribute to one category!-->
+            <file name="eu-esa-snap-netbeans-javahelp-JavaHelpQuickSearchProviderImpl.instance">
+                <attr name="displayName" stringvalue="SNAP Help"/>
+            </file>
+        </folder>
+    </folder>
+</filesystem>
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645237)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd	(date 1683618645237)
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A TOC.  It is versioned -->
+
+        <!ELEMENT toc (tocitem*)>
+        <!ATTLIST toc version ( 1.0 | 2.0) #IMPLIED>
+        <!ATTLIST toc xml:lang CDATA #IMPLIED>
+        <!ATTLIST toc categoryopenimage CDATA #IMPLIED>
+        <!ATTLIST toc categoryclosedimage CDATA #IMPLIED>
+        <!ATTLIST toc topicimage CDATA #IMPLIED>
+
+        <!-- an item -->
+
+        <!ELEMENT tocitem (tocitem)*>
+        <!ATTLIST tocitem xml:lang CDATA #IMPLIED>
+        <!ATTLIST tocitem text CDATA #REQUIRED>
+        <!ATTLIST tocitem image CDATA #IMPLIED>
+        <!ATTLIST tocitem target CDATA #IMPLIED>
+        <!ATTLIST tocitem mergetype CDATA #IMPLIED>
+        <!ATTLIST tocitem expand (true | false ) #IMPLIED>
+        <!ATTLIST tocitem presentationtype CDATA #IMPLIED>
+        <!ATTLIST tocitem presentationname CDATA #IMPLIED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+          Added mergetype attribute into tocitem -rgregor 6 June '01
+         -->
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645261)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd	(date 1683618645261)
@@ -0,0 +1,113 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A HelpSet.  It is versioned -->
+
+        <!ELEMENT helpset (title, maps, view+, subhelpset*, presentation*, impl?)>
+        <!ATTLIST helpset version ( 1.0 | 2.0) #IMPLIED>
+        <!ATTLIST helpset xml:lang CDATA #IMPLIED>
+
+
+        <!-- The title. -->
+
+        <!ELEMENT title (#PCDATA)>
+
+
+        <!-- Maps between ids and urls for this helpset -->
+        <!-- there is a bug in JH1.0 that forces a single map -->
+
+        <!ELEMENT maps (homeID, mapref+)>
+        <!ELEMENT homeID (#PCDATA)>
+        <!ELEMENT mapref EMPTY>
+        <!ATTLIST mapref location CDATA #REQUIRED>
+
+
+        <!-- Views into the information -->
+
+        <!ELEMENT view (name | label | image? | type | data?)*>
+        <!ATTLIST view xml:lang CDATA #IMPLIED>
+        <!ATTLIST view mergetype CDATA #IMPLIED>
+        <!ELEMENT name (#PCDATA)>
+        <!ELEMENT label (#PCDATA)>
+        <!ELEMENT image (#PCDATA)>
+        <!ELEMENT type (#PCDATA)>
+        <!ELEMENT data (#PCDATA)>
+        <!ATTLIST data engine CDATA #IMPLIED>
+
+
+        <!-- Subhelpsets to merge "statically" -->
+
+        <!ELEMENT subhelpset EMPTY>
+        <!ATTLIST subhelpset location CDATA #IMPLIED>
+
+
+        <!-- Presentation of the HelpSet -->
+
+        <!ELEMENT presentation (name, size?, location?, title?, image?, toolbar?)*>
+        <!ATTLIST presentation xml:lang CDATA #IMPLIED>
+        <!ATTLIST presentation default (true | false) #IMPLIED>
+        <!ATTLIST presentation displayviews (true | false) #IMPLIED>
+        <!ATTLIST presentation displayviewimages (true | false) #IMPLIED>
+        <!ELEMENT size EMPTY>
+        <!ATTLIST size width CDATA #REQUIRED>
+        <!ATTLIST size height CDATA #REQUIRED>
+        <!ELEMENT location EMPTY>
+        <!ATTLIST location x CDATA #REQUIRED>
+        <!ATTLIST location y CDATA #REQUIRED>
+        <!ELEMENT toolbar (helpaction*)>
+        <!ELEMENT helpaction (#PCDATA)>
+        <!ATTLIST helpaction image CDATA #IMPLIED>
+
+        <!-- Implementation specific data -->
+
+        <!ELEMENT impl (helpsetregistry?, viewerregistry*)>
+        <!ELEMENT helpsetregistry EMPTY>
+        <!ATTLIST helpsetregistry helpbrokerclass CDATA #REQUIRED>
+        <!ELEMENT viewerregistry EMPTY>
+        <!ATTLIST viewerregistry viewertype CDATA #REQUIRED>
+        <!ATTLIST viewerregistry viewerclass CDATA #REQUIRED>
+
+        <!--
+
+          Change list:
+
+          Cleanup to be more XML-ish - epll, 15 Dec '98
+          xml:lang attributes for title, label, and name are no more.
+          engine is now an attribute of data.
+          impl is no more; use PI's instead.
+          data inside map is now the map tag.
+
+          More cleanup - epll, 16 Dec '98
+          moved homeID into map
+          made data inside map be mapref (for map reference)
+
+          Added mergetype attribute into view - rgregor 6 June '01
+
+          Added versions
+
+          Added presentation
+
+          Added impl
+
+         -->
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645233)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd	(date 1683618645233)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A Map.  It is versioned -->
+
+        <!ELEMENT map (mapID*)>
+        <!ATTLIST map version CDATA #FIXED "1.0">
+        <!ATTLIST map xml:lang CDATA #IMPLIED>
+
+        <!-- an map ID pair -->
+
+        <!ELEMENT mapID EMPTY>
+        <!ATTLIST mapID xml:lang CDATA #IMPLIED>
+        <!ATTLIST mapID target CDATA #REQUIRED>
+        <!ATTLIST mapID url CDATA #REQUIRED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+         -->
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645352)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd	(date 1683618645352)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A Map.  It is versioned -->
+
+        <!ELEMENT map (mapID*)>
+        <!ATTLIST map version (1.0 | 2.0) #IMPLIED>
+        <!ATTLIST map xml:lang CDATA #IMPLIED>
+
+        <!-- an map ID pair -->
+
+        <!ELEMENT mapID EMPTY>
+        <!ATTLIST mapID xml:lang CDATA #IMPLIED>
+        <!ATTLIST mapID target CDATA #REQUIRED>
+        <!ATTLIST mapID url CDATA #REQUIRED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+
+          Added the version 2.0 update
+         -->
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645274)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd	(date 1683618645274)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A TOC.  It is versioned -->
+
+        <!ELEMENT toc (tocitem*)>
+        <!ATTLIST toc version CDATA #FIXED "1.0">
+        <!ATTLIST toc xml:lang CDATA #IMPLIED>
+
+        <!-- an item -->
+
+        <!ELEMENT tocitem (#PCDATA | tocitem)*>
+        <!ATTLIST tocitem xml:lang CDATA #IMPLIED>
+        <!ATTLIST tocitem text CDATA #IMPLIED>
+        <!ATTLIST tocitem image CDATA #IMPLIED>
+        <!ATTLIST tocitem target CDATA #IMPLIED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+         -->
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645274)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd	(date 1683618645274)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A TOC.  It is versioned -->
+
+        <!ELEMENT toc (tocitem*)>
+        <!ATTLIST toc version CDATA #FIXED "1.0">
+        <!ATTLIST toc xml:lang CDATA #IMPLIED>
+
+        <!-- an item -->
+
+        <!ELEMENT tocitem (#PCDATA | tocitem)*>
+        <!ATTLIST tocitem xml:lang CDATA #IMPLIED>
+        <!ATTLIST tocitem text CDATA #IMPLIED>
+        <!ATTLIST tocitem image CDATA #IMPLIED>
+        <!ATTLIST tocitem target CDATA #IMPLIED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+         -->
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645237)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd	(date 1683618645237)
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A TOC.  It is versioned -->
+
+        <!ELEMENT toc (tocitem*)>
+        <!ATTLIST toc version ( 1.0 | 2.0) #IMPLIED>
+        <!ATTLIST toc xml:lang CDATA #IMPLIED>
+        <!ATTLIST toc categoryopenimage CDATA #IMPLIED>
+        <!ATTLIST toc categoryclosedimage CDATA #IMPLIED>
+        <!ATTLIST toc topicimage CDATA #IMPLIED>
+
+        <!-- an item -->
+
+        <!ELEMENT tocitem (tocitem)*>
+        <!ATTLIST tocitem xml:lang CDATA #IMPLIED>
+        <!ATTLIST tocitem text CDATA #REQUIRED>
+        <!ATTLIST tocitem image CDATA #IMPLIED>
+        <!ATTLIST tocitem target CDATA #IMPLIED>
+        <!ATTLIST tocitem mergetype CDATA #IMPLIED>
+        <!ATTLIST tocitem expand (true | false ) #IMPLIED>
+        <!ATTLIST tocitem presentationtype CDATA #IMPLIED>
+        <!ATTLIST tocitem presentationname CDATA #IMPLIED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+          Added mergetype attribute into tocitem -rgregor 6 June '01
+         -->
Index: src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpSetRegistration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpSetRegistration.java b/src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpSetRegistration.java
new file mode 100644
--- /dev/null	(date 1683618975155)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpSetRegistration.java	(date 1683618975155)
@@ -0,0 +1,61 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp.api;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * Registers a help set.
+ * A help set reference according to {@code -//NetBeans//DTD JavaHelp Help Set Reference 1.0//EN} is created.
+ * If the help set specifies a search view, the search indexer will also be run;
+ * all {@code *.html} and {@code *.htm} in the package containing the help set, and its subpackages, will be indexed.
+ *
+ * @see <a href="@TOP@/apichanges.html#HelpSetRegistration">how to convert to this annotation</a>
+ * @since org.netbeans.modules.javahelp/1 2.20
+ */
+@Retention(RetentionPolicy.SOURCE)
+@Target(ElementType.PACKAGE)
+public @interface HelpSetRegistration {
+
+    /**
+     * Relative location of a help set file.
+     * Typically matches: {@code -//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 2.0//EN}
+     */
+    String helpSet();
+
+    /**
+     * Whether the help set should be merged into the master help set.
+     */
+    boolean merge() default true;
+
+    /**
+     * Position of help set reference.
+     */
+    int position() default Integer.MAX_VALUE;
+
+    /**
+     * Helpset-relative HTML filenames to exclude from indexing.
+     */
+    String[] excludes() default {"credits.html"};
+
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/Utils.java b/src/main/java/eu/esa/snap/netbeans/javahelp/Utils.java
new file mode 100644
--- /dev/null	(date 1683618975151)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/Utils.java	(date 1683618975151)
@@ -0,0 +1,56 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import javax.swing.JPopupMenu;
+import javax.swing.SwingUtilities;
+import java.awt.Component;
+import java.awt.Point;
+import java.awt.event.MouseEvent;
+
+/**
+ * Utility class with a set of the static methods.
+ *
+ * @author Victor G. Vasilyev
+ */
+class Utils {
+
+    /**
+     * Shows the specified popup menu.
+     *
+     * @param e   - the mouse event
+     * @param m   - the popup menu
+     * @param dst - the destination component
+     */
+    static void showPopupMenu(MouseEvent e, JPopupMenu m, Component dst) {
+        Point pt = convertPoint(e.getComponent(), e.getPoint(), dst);
+        m.show(dst, pt.x, pt.y);
+    }
+
+    private static Point convertPoint(Component src, Point p, Component dst) {
+        return SwingUtilities.convertPoint(src, p, dst);
+    }
+
+    static boolean isMouseRightClick(MouseEvent e) {
+        return e.getButton() == MouseEvent.BUTTON3 &&
+                e.getClickCount() == 1;
+    }
+
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelp.java b/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelp.java
new file mode 100644
--- /dev/null	(date 1683620623706)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelp.java	(date 1683620623706)
@@ -0,0 +1,1137 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package eu.esa.snap.netbeans.javahelp;
+
+import eu.esa.snap.netbeans.javahelp.api.Help;
+import org.netbeans.api.progress.ProgressHandle;
+import org.netbeans.api.progress.ProgressHandleFactory;
+import org.openide.util.HelpCtx;
+import org.openide.util.ImageUtilities;
+import org.openide.util.NbBundle;
+import org.openide.util.RequestProcessor;
+import org.openide.util.Task;
+import org.openide.util.TaskListener;
+import org.openide.util.Utilities;
+import org.openide.windows.WindowManager;
+
+import javax.help.HelpSet;
+import javax.help.HelpSetException;
+import javax.help.InvalidHelpSetContextException;
+import javax.help.JHelp;
+import javax.help.Map.ID;
+import javax.help.NavigatorView;
+import javax.help.search.MergingSearchEngine;
+import javax.help.search.SearchEngine;
+import javax.swing.BorderFactory;
+import javax.swing.BoundedRangeModel;
+import javax.swing.DefaultBoundedRangeModel;
+import javax.swing.JComponent;
+import javax.swing.JDialog;
+import javax.swing.JEditorPane;
+import javax.swing.JFrame;
+import javax.swing.SwingUtilities;
+import java.awt.AWTEvent;
+import java.awt.BorderLayout;
+import java.awt.Component;
+import java.awt.Container;
+import java.awt.Dialog;
+import java.awt.Dimension;
+import java.awt.Frame;
+import java.awt.Image;
+import java.awt.Point;
+import java.awt.Rectangle;
+import java.awt.Toolkit;
+import java.awt.Window;
+import java.awt.event.AWTEventListener;
+import java.awt.event.WindowAdapter;
+import java.awt.event.WindowEvent;
+import java.lang.ref.Reference;
+import java.lang.ref.SoftReference;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Stack;
+import java.util.logging.Level;
+import java.util.logging.LogRecord;
+
+// [PENDING] should event dispatch thread be used thruout?
+
+/**
+ * Help implementation using the JavaHelp 1.x system.
+ *
+ * @author Jesse Glick, Richard Gregor
+ */
+public final class JavaHelp extends AbstractHelp implements HelpCtx.Displayer, AWTEventListener {
+
+    /**
+     * Icons
+     */
+    public static final String HELP_ICON_SMALL =
+            "eu/esa/snap/netbeans/javahelp/resources/help.png";         //NOI18N
+    public static final String HELP_ICON_LARGE =
+            "eu/esa/snap/netbeans/javahelp/resources/help32x32.png";    //NOI18N
+    /**
+     * progress of merging help sets; max is # of sets to merge
+     */
+    private static final BoundedRangeModel mergeModel = new DefaultBoundedRangeModel(0, 0, 0, 0);
+
+    // [PENDING] hold help sets weakly? softly? try to conserve memory...
+    public static Help instance;
+    private static RequestProcessor helpLoader = null;
+    /**
+     * map from help sets to (soft refs to) components showing them
+     */
+    private final Map<HelpSet, Reference<JHelp>> availableJHelps = new HashMap<HelpSet, Reference<JHelp>>();
+    /**
+     * The master help set.
+     */
+    private HelpSet master = null;
+    /**
+     * viewer (may be invisible) showing help normally; null until first used; if invisible, is empty
+     */
+    private JFrame frameViewer = null;
+    /**
+     * viewer showing help parented to current modal dialog; initially null
+     */
+    private JDialog dialogViewer = null;
+    /**
+     * whether user explicitly closed dialog viewer.
+     * true - frame viewer was initially open, then reparented to dialog viewer,
+     * then user closes main dialog and we ought to reparent to frame viewer
+     * false - frame viewer not initially open anyway, or it was but the user
+     * explicitly closed it as a dialog viewer, we should leave it closed
+     */
+    private boolean reparentToFrameLater = false;
+    /**
+     * the modal dialog(s) currently in effect
+     */
+    private Stack<Dialog> currentModalDialogs = new Stack<Dialog>();
+    /**
+     * modal dialogs stack has been used successfully
+     */
+    private boolean currentModalDialogsReady = false;
+    /**
+     * last-displayed JHelp
+     */
+    private JHelp lastJH = null;
+    private ProgressHandle progressHandle = null;
+
+    /**
+     * Make a JavaHelp implementation of the Help.Impl interface.
+     */
+    public JavaHelp() {
+        Installer.log.fine("JavaHelp created");
+        if (!isModalExcludedSupported()) {
+            Toolkit.getDefaultToolkit().addAWTEventListener(this, AWTEvent.WINDOW_EVENT_MASK);
+        }
+        instance = this;
+    }
+
+    /**
+     * @param hs the help set
+     * @return 'Search' NavigatorView from the given HelpSet
+     */
+    private static NavigatorView findNavigatorView(HelpSet hs) {
+        for (NavigatorView nv : hs.getNavigatorViews()) {
+            if (null != nv.getParameters() && nv.getParameters().get("engine") != null) { //NOI18N
+                return nv;
+            }
+        }
+        return null;
+    }
+
+    /**
+     * Test whether a window is a dialog that is relevant to the help displayer.
+     * Only modal dialogs that are NOT print dialogs, progress dialog or similar
+     * system dialogs are relevant.
+     */
+    private static boolean isRelevantDialog(Dialog d) {
+        if (!d.isModal() || d instanceof ProgressDialog) {
+            return false;
+        }
+        String dlgClass = d.getClass().getName();
+        return !"sun.awt.windows.WPageDialog".equals(dlgClass) //NOI18N
+                && !"sun.awt.windows.WPrintDialog".equals(dlgClass) //NOI18N
+                && !"sun.print.ServiceDialog".equals(dlgClass) //NOI18N
+                && !"apple.awt.CPrinterJobDialog".equals(dlgClass) //NOI18N
+                && !"apple.awt.CPrinterPageDialog".equals(dlgClass); //NOI18N
+
+    }
+
+    private static RequestProcessor getHelpLoader() {
+        if (helpLoader == null) {
+            helpLoader = new RequestProcessor("eu.esa.snap.netbeans.javahelp.JavaHelp"); // NOI18N
+        }
+        return helpLoader;
+    }
+
+    /**
+     * Warn that an ID was not found in any help set.
+     *
+     * @param id the help ID
+     */
+    private static void warnBadID(String id) {
+        // PLEASE DO NOT COMMENT OUT...localized warning
+        Installer.log.warning(NbBundle.getMessage(JavaHelp.class, "MSG_jh_id_not_found", id));
+    }
+
+    private static String getCodeLocation(Class c) {
+        String cl = "unknown code location"; // NOI18N
+        try {
+            cl = c.getProtectionDomain().getCodeSource().getLocation().toString();
+        } catch (Exception e) {
+            Installer.log.log(Level.SEVERE, "unknown code location", e); // NOI18N
+        }
+        return cl;
+    }
+
+    static boolean isContentViewer(Component c) {
+        // TODO: need to find a criterion to recognize the JH Content Viewer,
+        // i.e. an instance of
+        // javax.help.plaf.basic.BasicContentViewerUI$JHEditorPane .
+        // The following test won't work if component hierarchy of the Java Help
+        // contains more then one JEditorPane.
+        return c instanceof JEditorPane;
+    }
+
+    private static boolean isModalExcludedSupported() {
+        return Toolkit.getDefaultToolkit().isModalExclusionTypeSupported(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
+    }
+
+    private static void setModalExcluded(Window window) {
+        window.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
+    }
+
+    void deactivate() {
+        if (!isModalExcludedSupported()) {
+            Toolkit.getDefaultToolkit().removeAWTEventListener(this);
+        }
+    }
+
+    /**
+     * Get the master help set that others will be merged into.
+     *
+     * @return the master help set
+     */
+    private synchronized HelpSet getMaster() {
+        if (master == null) {
+            ClassLoader loader = JavaHelp.class.getClassLoader();
+            try {
+                master = new HelpSet(loader, new URL("nbresloc:/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml")); // NOI18N
+                Collection<? extends HelpSet> sets = getHelpSets();
+                List<HelpSet> toMerge = new ArrayList<HelpSet>(Math.min(1, sets.size()));
+                for (HelpSet hs : sets) {
+                    if (shouldMerge(hs)) {
+                        toMerge.add(hs);
+                    }
+                }
+                mergeModel.setValue(0);
+                mergeModel.setMaximum(toMerge.size());
+                for (HelpSet hs : toMerge) {
+                    master.add(hs);
+                    mergeModel.setValue(mergeModel.getValue() + 1);
+                }
+            } catch (HelpSetException hse) {
+                Installer.log.log(Level.WARNING, null, hse);
+                master = new HelpSet();
+            } catch (MalformedURLException mfue) {
+                mfue.printStackTrace();
+                throw new IllegalStateException();
+            }
+        }
+        return master;
+    }
+    /*
+    private void closeFrameViewer() {
+        if (frameViewer == null || !frameViewer.isVisible()) throw new IllegalStateException();
+        Installer.log.fine("Closing frame viewer");
+        frameViewer.setVisible(false);
+        frameViewer.getContentPane().removeAll();
+    }
+    private void closeDialogViewer() {
+        if (dialogViewer == null || !dialogViewer.isVisible()) throw new IllegalStateException();
+        Installer.log.fine("Closing dialog viewer");
+        dialogViewer.setVisible(false);
+        dialogViewer.getContentPane().removeAll();
+        dialogViewer.dispose();
+        dialogViewer = null;
+    }
+     */
+
+    /**
+     * @return SearchEngine for QuickSearch
+     */
+    synchronized SearchEngine createSearchEngine() {
+        //this is not very nice but i didn't any better way to create search engine
+        MergingSearchEngine result = null;
+        Collection<? extends HelpSet> sets = getHelpSets();
+        for (HelpSet hs : sets) {
+            if (shouldMerge(hs)) {
+                NavigatorView nv = findNavigatorView(hs);
+                if (null == nv)
+                    continue;
+                if (null == result) {
+                    result = new MergingSearchEngine(nv);
+                } else {
+                    result.merge(nv);
+                }
+            }
+        }
+        return result;
+    }
+
+    /**
+     * Called when set of helpsets changes.
+     * Here, clear the master helpset, since it may
+     * need to have different contents (or a different
+     * order of contents) when next viewed.
+     */
+    protected @Override void helpSetsChanged() {
+        synchronized (this) {
+            // XXX might be better to incrementally add/remove helpsets?
+            // Unfortunately the JavaHelp API does not provide a way to
+            // insert them except in last position, which prevents smart
+            // navigator ordering.
+            master = null;
+        }
+        mergeModel.setValue(0);
+        mergeModel.setMaximum(0);
+        super.helpSetsChanged();
+    }
+
+    private Dialog currentModalDialog() {
+        if (currentModalDialogs.empty()) {
+            Window w = HelpAction.WindowActivatedDetector.getCurrentActivatedWindow();
+            if (!currentModalDialogsReady && (w instanceof Dialog) &&
+                    !(w instanceof ProgressDialog) && w != dialogViewer && ((Dialog) w).isModal()) {
+                // #21286. A modal dialog was opened before JavaHelp was even created.
+                Installer.log.fine("Early-opened modal dialog: " + w.getName() + " [" + ((Dialog) w).getTitle() + "]");
+                return (Dialog) w;
+            } else {
+                return null;
+            }
+        } else {
+            return currentModalDialogs.peek();
+        }
+    }
+
+    private void ensureFrameViewer() {
+        Installer.log.fine("ensureFrameViewer");
+        if (frameViewer == null) {
+            Installer.log.fine("\tcreating new");
+            frameViewer = new JFrame();
+            List<Image> iconImages = new ArrayList<Image>(2);
+            iconImages.add(ImageUtilities.loadImage(HELP_ICON_SMALL));
+            iconImages.add(ImageUtilities.loadImage(HELP_ICON_LARGE));
+            frameViewer.setIconImages(iconImages);
+            frameViewer.getAccessibleContext().setAccessibleDescription(NbBundle.getMessage(JavaHelp.class, "ACSD_JavaHelp_viewer"));
+
+            if (isModalExcludedSupported()) {
+                setModalExcluded(frameViewer);
+                frameViewer.getRootPane().putClientProperty("netbeans.helpframe", Boolean.TRUE); // NOI18N
+            }
+        }
+    }
+
+    private void ensureDialogViewer() {
+        Installer.log.fine("ensureDialogViewer");
+        Dialog parent = currentModalDialog();
+        if (dialogViewer != null && dialogViewer.getOwner() != parent) {
+            Installer.log.fine("\tdisposing old");
+            dialogViewer.setVisible(false);
+            dialogViewer.dispose();
+            dialogViewer = null;
+        }
+        if (dialogViewer == null) {
+            Installer.log.fine("\tcreating new");
+            dialogViewer = new JDialog(parent);
+            dialogViewer.getAccessibleContext().setAccessibleDescription(NbBundle.getMessage(JavaHelp.class, "ACSD_JavaHelp_viewer"));
+        }
+    }
+
+    private void displayHelpInFrame(JHelp jh) {
+        Installer.log.fine("displayHelpInFrame");
+        if (jh == null) jh = lastJH;
+        if (jh == null) throw new IllegalStateException();
+        boolean newFrameViewer = (frameViewer == null);
+        ensureFrameViewer();
+        if (dialogViewer != null) {
+            Installer.log.fine("\tdisposing old dialog");
+            dialogViewer.setVisible(false);
+            dialogViewer.getContentPane().removeAll();
+            dialogViewer.dispose();
+            dialogViewer = null;
+        }
+        if (frameViewer.getContentPane().getComponentCount() > 0 &&
+                frameViewer.getContentPane().getComponent(0) != jh) {
+            Installer.log.fine("\treplacing content");
+            frameViewer.getContentPane().removeAll();
+        }
+        if (frameViewer.getContentPane().getComponentCount() == 0) {
+            Installer.log.fine("\tadding content");
+            frameViewer.getContentPane().add(jh, BorderLayout.CENTER);
+            frameViewer.setTitle(jh.getModel().getHelpSet().getTitle());
+            frameViewer.pack();
+        }
+        if (newFrameViewer) {
+            // #22445: only do this stuff once when frame is made.
+            // After that we need to remember the size and position.
+            Rectangle bounds = Utilities.getUsableScreenBounds();
+            Dimension frameSize = frameViewer.getSize();
+            // #108255: Increase size of Help window by 30%
+            frameSize.width = (int) (1.3 * frameSize.width);
+            frameSize.height = (int) (1.3 * frameSize.height);
+
+            frameViewer.setSize(frameSize);
+
+            // #11018: have mercy on little screens
+            if (frameSize.width > bounds.width) {
+                frameSize.width = bounds.width;
+            }
+            if (frameSize.height > bounds.height) {
+                frameSize.height = bounds.height;
+            }
+            if ((frameSize.width > bounds.width) || (frameSize.height > bounds.height)) {
+                frameViewer.setSize(frameSize);
+            }
+            //Put frame to top right
+            frameViewer.setLocation(new Point(bounds.x + bounds.width - frameViewer.getSize().width, bounds.y));
+        }
+
+        frameViewer.setState(Frame.NORMAL);
+        if (frameViewer.isVisible()) {
+            frameViewer.repaint();
+            frameViewer.toFront(); // #20048
+            Installer.log.fine("\talready visible, just repainting");
+        } else {
+            bindFrameViewerToCurrentDialog();
+            frameViewer.setVisible(true);
+        }
+        //#29417: This call of requestFocus causes lost focus when Help window
+        //is reopened => removed.
+        //frameViewer.requestFocus();
+        lastJH = jh;
+    }
+
+    /**
+     * If the help frame is opened from a modal dialog, it should be closed
+     * automatically if that dialog closes. See bug 233543. Also the windows
+     * should be rearranged so that both are visible. See bug #233542.
+     */
+    private void bindFrameViewerToCurrentDialog() {
+        int maxDepth = 0;
+        Dialog topDialog = null;
+        for (Window w : JDialog.getWindows()) {
+            if (w instanceof Dialog && w.isVisible()) {
+                Dialog d = (Dialog) w;
+                if (isRelevantDialog(d)) {
+                    int depth = 0;
+                    for (Window o = d.getOwner(); o != null; o = o.getOwner()) {
+                        depth++;
+                        if (o == WindowManager.getDefault().getMainWindow()
+                                && depth > maxDepth) {
+                            maxDepth = depth;
+                            topDialog = d;
+                            break;
+                        }
+                    }
+                }
+            }
+        }
+        if (topDialog != null) {
+            rearrange(topDialog, frameViewer);
+            final Dialog finalTopDialog = topDialog;
+            topDialog.addWindowListener(new WindowAdapter() {
+
+                @Override
+                public void windowClosed(WindowEvent e) {
+                    if (frameViewer != null) {
+                        frameViewer.setVisible(false);
+                    }
+                    finalTopDialog.removeWindowListener(this);
+                }
+            });
+        }
+    }
+
+    private void displayHelpInDialog(JHelp jh) {
+        Installer.log.fine("displayHelpInDialog");
+        if (jh == null) jh = lastJH;
+        if (jh == null) throw new IllegalStateException();
+        ensureDialogViewer();
+        Rectangle bounds = null;
+        if (frameViewer != null) {
+            Installer.log.fine("\thiding old frame viewer");
+            if (frameViewer.isVisible()) {
+                bounds = frameViewer.getBounds();
+                frameViewer.setVisible(false);
+            }
+            frameViewer.getContentPane().removeAll();
+        }
+        if (dialogViewer.getContentPane().getComponentCount() > 0 &&
+                dialogViewer.getContentPane().getComponent(0) != jh) {
+            Installer.log.fine("\tchanging content");
+            dialogViewer.getContentPane().removeAll();
+        }
+        if (dialogViewer.getContentPane().getComponentCount() == 0) {
+            Installer.log.fine("\tadding content");
+            dialogViewer.getContentPane().add(jh, BorderLayout.CENTER);
+            dialogViewer.setTitle(jh.getModel().getHelpSet().getTitle());
+            dialogViewer.pack();
+        }
+        if (bounds != null) {
+            Installer.log.fine("\tcopying bounds from frame viewer: " + bounds);
+            dialogViewer.setBounds(bounds);
+        }
+        rearrange(currentModalDialog(), dialogViewer);
+        if (dialogViewer.isVisible()) {
+            Installer.log.fine("\talready visible, just repainting");
+            dialogViewer.repaint();
+        } else {
+            dialogViewer.setVisible(true);
+        }
+        lastJH = jh;
+    }
+
+    /**
+     * Show some help.
+     * This is the basic call which should be used externally
+     * Handles null contexts, missing or null help IDs, and null URLs.
+     * If there is any problem, shows the master set
+     * instead, or it may also create a new help window.
+     * Works correctly if invoked while a modal dialog is open--creates a new modal
+     * dialog with the help. Else creates a frame to view the help in.
+     *
+     * @param ctx        the help context to display
+     * @param showmaster whether to show the master help set or not
+     */
+    public void showHelp(HelpCtx ctx, final boolean showmaster) {
+        final HelpCtx ctx2 = (ctx != null) ? ctx : HelpCtx.DEFAULT_HELP;
+        if (!SwingUtilities.isEventDispatchThread()) {
+            Installer.log.fine("showHelp later...");
+            SwingUtilities.invokeLater(new Runnable() {
+                public void run() {
+                    showHelp(ctx2, showmaster);
+                }
+            });
+            return;
+        }
+        LogRecord r = new LogRecord(Level.FINE, "LOG_SHOWING_HELP"); // NOI18N
+        r.setParameters(new Object[]{ctx2.getHelpID()});
+        r.setResourceBundleName("eu.esa.snap.netbeans.javahelp.Bundle"); // NOI18N
+        r.setResourceBundle(NbBundle.getBundle(JavaHelp.class)); // NOI18N
+        r.setLoggerName(Installer.UI.getName());
+        Installer.log.log(r);
+        Installer.UI.log(r);
+
+        LogRecord rUsg = new LogRecord(Level.INFO, "USG_HELP_SHOW"); // NOI18N
+        rUsg.setParameters(new Object[]{ctx2.getHelpID()});
+        rUsg.setResourceBundleName("eu.esa.snap.netbeans.javahelp.Bundle"); // NOI18N
+        rUsg.setResourceBundle(NbBundle.getBundle(JavaHelp.class));
+        rUsg.setLoggerName(Installer.USG.getName());
+        Installer.USG.log(rUsg);
+
+        final HelpSet[] hs_ = new HelpSet[1];
+        Runnable run = new Runnable() {
+            public void run() {
+                String id = ctx2.getHelpID();
+                if (showmaster || ctx2.equals(HelpCtx.DEFAULT_HELP) || id == null) {
+                    Installer.log.fine("getting master...");
+                    hs_[0] = getMaster();
+                    Installer.log.fine("getting master...done");
+                }
+                if (hs_[0] == null ||
+                        /* #22670: if ID in hidden helpset, use that HS, even if showmaster */
+                        (id != null && !hs_[0].getCombinedMap().isValidID(id, hs_[0]))) {
+                    Installer.log.fine("finding help set for " + id + "...");
+                    hs_[0] = findHelpSetForID(id);
+                    Installer.log.fine("finding help set for " + id + "...done");
+                }
+            }
+        };
+        if (master == null) {
+            // Computation required. Show the progress dialog and do the computation
+            // in a separate thread. When finished, the progress dialog will hide
+            // itself and control will return to event thread.
+            Installer.log.fine("showing progress dialog...");
+            progressHandle = ProgressHandleFactory.createHandle("");
+            createProgressDialog(run, currentModalDialog()).setVisible(true);
+            progressHandle.finish();
+            Installer.log.fine("dialog done.");
+        } else {
+            // Nothing much to do, run it synchronously in event thread.
+            run.run();
+        }
+        HelpSet hs = hs_[0];
+        if (hs == null) {
+            // Interrupted dialog?
+            return;
+        }
+        JHelp jh = createAndDisplayJHelp(hs);
+        if (jh == null) {
+            return;
+        }
+        displayInJHelp(jh, ctx2.getHelpID(), ctx2.getHelp());
+    }
+
+    /**
+     * Display help topic from QuickSearch
+     *
+     * @param url Help URL
+     */
+    void showHelp(URL url) {
+        JHelp jh = createAndDisplayJHelp(getMaster());
+        if (jh == null) {
+            return;
+        }
+
+        displayInJHelp(jh, null, url);
+    }
+
+    private JHelp createAndDisplayJHelp(HelpSet hs) {
+        JHelp jh = createJHelp(hs);
+        if (jh == null) {
+            return null;
+        }
+
+        if (isModalExcludedSupported()) {
+            displayHelpInFrame(jh);
+        } else {
+            if (currentModalDialog() == null) {
+                Installer.log.fine("showing as non-dialog");
+                displayHelpInFrame(jh);
+            } else {
+                Installer.log.fine("showing as dialog");
+                displayHelpInDialog(jh);
+            }
+        }
+        return jh;
+    }
+
+    @Override
+    public boolean display(HelpCtx help) {
+        String id = help.getHelpID();
+        if (id != null) {
+            if (isValidID(id, true)) {
+                showHelp(help, true);
+                return true;
+            } else {
+                return false;
+            }
+        } else {
+            URL u = help.getHelp();
+            if (u != null) {
+                // or use URLDisplayer?
+                showHelp(u);
+                return true;
+            } else {
+                return false;
+            }
+        }
+    }
+
+    /**
+     * Handle modal dialogs opening and closing. Note reparentToFrameLater state = rTFL.
+     * Cases:
+     * 1. No viewer open. Dialog opened. Push it on stack. rTFL = false.
+     * 2. No viewer open, !rTFL. Top dialog closed. Pop it.
+     * 3. No viewer open, rTFL. Only top dialog closed. Pop it. Create frame viewer.
+     * 4. No viewer open, rTFL. Some top dialog closed. Pop it. Create dialog viewer.
+     * 5. Frame viewer open. Dialog opened. Push it. Close frame viewer. Create dialog viewer. rTFL = true.
+     * 6. Dialog viewer open. Dialog opened. Push it. Reparent dialog viewer.
+     * 7. Dialog viewer open. Viewer closed. rTFL = false.
+     * It cannot happen that the dialog viewer is still open when the top dialog has been
+     * closed, as AWT will automatically close the dialog viewer first. However in this case
+     * it sends only CLOSED for the dialog viewer. If the user closes it, CLOSING is sent at
+     * that time, and CLOSED also later when the main dialog is closed.
+     */
+    public void eventDispatched(AWTEvent awtev) {
+        WindowEvent ev = (WindowEvent) awtev;
+        int type = ev.getID();
+        Window w = ev.getWindow();
+        if (type == WindowEvent.WINDOW_CLOSING && w == dialogViewer) {
+            Installer.log.fine("7. Dialog viewer open. Viewer closed. rTFL = false.");
+            reparentToFrameLater = false;
+        }
+        if (type != WindowEvent.WINDOW_CLOSED && type != WindowEvent.WINDOW_OPENED) {
+            //Installer.log.fine("uninteresting window event: " + ev);
+            return;
+        }
+        if (w instanceof Dialog) {
+            Dialog d = (Dialog) w;
+
+            if (isRelevantDialog(d) || d == dialogViewer) {
+
+                //#47150: Race condition in toolkit if two dialogs are shown in a row
+                if (d instanceof JDialog) {
+                    if ("true".equals(((JDialog) d).getRootPane().getClientProperty("javahelp.ignore.modality"))) { //NOI18N
+                        return;
+                    }
+                }
+
+                if (Installer.log.isLoggable(Level.FINE)) {
+                    Installer.log.fine("modal (or viewer) dialog event: " + ev + " [" + d.getTitle() + "]");
+                }
+                if (type == WindowEvent.WINDOW_CLOSED) {
+                    if (d == dialogViewer) {
+                        // ignore, expected
+                    } else if (d == currentModalDialog()) {
+                        if (!currentModalDialogs.isEmpty()) {
+                            currentModalDialogs.pop();
+                            currentModalDialogsReady = true;
+                        } else {
+                            Installer.log.log(Level.WARNING, null, new IllegalStateException("Please see IZ #24993")); // NOI18N
+                        }
+                        showDialogStack();
+                        if ((frameViewer == null || !frameViewer.isVisible() ||
+                                /* 14393 */frameViewer.getState() == Frame.ICONIFIED) &&
+                                (dialogViewer == null || !dialogViewer.isVisible())) {
+                            if (!reparentToFrameLater) {
+                                Installer.log.fine("2. No viewer open, !rTFL. Top dialog closed. Pop it.");
+                            } else if (currentModalDialog() == null) {
+                                Installer.log.fine("3. No viewer open, rTFL. Only top dialog closed. Pop it. Create frame viewer.");
+                                //#47150 - reusing the old frame viewer can cause
+                                //re-showing the frame viewer to re-show the dialog
+                                if (frameViewer != null) {
+                                    frameViewer.dispose();
+                                    frameViewer = null;
+                                }
+                                displayHelpInFrame(null);
+                            } else {
+                                Installer.log.fine("4. No viewer open, rTFL. Some top dialog closed. Pop it. Create dialog viewer.");
+                                displayHelpInDialog(null);
+                            }
+                        } else if (dialogViewer != null && dialogViewer.isVisible()) {
+                            Installer.log.warning("dialogViewer should not still be open"); // NOI18N
+                        } else {
+                            Installer.log.warning("frameViewer visible when a dialog was closing"); // NOI18N
+                        }
+                    } else {
+                        Installer.log.fine("some random modal dialog closed: " + d.getName() + " [" + d.getTitle() + "]");
+                    }
+                } else {
+                    // WINDOW_OPENED
+                    if (d != dialogViewer) {
+                        currentModalDialogs.push(d);
+                        showDialogStack();
+                        if ((frameViewer == null || !frameViewer.isVisible() ||
+                                /* 14393 */frameViewer.getState() == Frame.ICONIFIED) &&
+                                (dialogViewer == null || !dialogViewer.isVisible())) {
+                            Installer.log.fine("1. No viewer open. Dialog opened. Push it on stack. rTFL = false.");
+                            reparentToFrameLater = false;
+                        } else if (frameViewer != null && frameViewer.isVisible()) {
+                            Installer.log.fine("5. Frame viewer open. Dialog opened. Push it. Close frame viewer. Create dialog viewer. rTFL = true.");
+                            displayHelpInDialog(null);
+                            reparentToFrameLater = true;
+                        } else if (dialogViewer != null && dialogViewer.isVisible()) {
+                            Installer.log.fine("6. Dialog viewer open. Dialog opened. Push it. Reparent dialog viewer.");
+                            displayHelpInDialog(null);
+                        } else {
+                            Installer.log.warning("logic error"); // NOI18N
+                        }
+                    } else {
+                        // dialog viewer opened, fine
+                    }
+                }
+            } else {
+                //Installer.log.fine("nonmodal dialog event: " + ev);
+            }
+        } else {
+            //Installer.log.fine("frame event: " + ev);
+        }
+    }
+
+    private void showDialogStack() {
+        if (Installer.log.isLoggable(Level.FINE)) {
+            StringBuffer buf = new StringBuffer("new modal dialog stack: ["); // NOI18N
+            boolean first = true;
+            Iterator it = currentModalDialogs.iterator();
+            while (it.hasNext()) {
+                if (first) {
+                    first = false;
+                } else {
+                    buf.append(", "); // NOI18N
+                }
+                buf.append(((Dialog) it.next()).getTitle());
+            }
+            buf.append("]"); // NOI18N
+            Installer.log.fine(buf.toString());
+        }
+    }
+
+    /**
+     * If needed, visually rearrange dialogViewer and dlg on screen.
+     * If they overlap, try to make them not overlap.
+     *
+     * @param dlg                 the visible modal dialog
+     * @param dialogOrFrameViewer The viewer, a dialog of a frame.
+     */
+    private void rearrange(Dialog dlg, Window dialogOrFrameViewer) {
+        Rectangle r1 = dlg.getBounds();
+        Rectangle r2 = dialogOrFrameViewer.getBounds();
+        if (r1.intersects(r2)) {
+            Installer.log.fine("modal dialog and dialog viewer overlap");
+            Dimension s = Toolkit.getDefaultToolkit().getScreenSize();
+            int xExtra = s.width - r1.width - r2.width;
+            int yExtra = s.height - r1.height - r2.height;
+            if (xExtra >= yExtra) {
+                //compare y axes of r1 and r2 to know how to relocate them - horizontal relocation
+                int r1Yaxis = r1.x + (r1.width / 2);
+                int r2Yaxis = r2.x + (r2.width / 2);
+                if (r1Yaxis <= r2Yaxis) {
+                    Installer.log.fine(" send help to the right");
+                    if ((r1.x + r1.width + r2.width) <= s.width) {
+                        Installer.log.fine("there is enough place fo help");
+                        r2.x = r1.x + r1.width;
+                    } else {
+                        Installer.log.fine("there is not enough place");
+                        if ((r1.width + r2.width) < s.width) {
+                            Installer.log.fine("relocate both");
+                            r2.x = s.width - r2.width;
+                            r1.x = r2.x - r1.width;
+                        } else {
+                            Installer.log.fine("relocate both and resize help");
+                            r1.x = 0;
+                            r2.x = r1.width;
+                            r2.width = s.width - r1.width;
+                        }
+                    }
+                } else {
+                    Installer.log.fine("send help to the left");
+                    if ((r1.x - r2.width) > 0) {
+                        Installer.log.fine("there is enough place for help");
+                        r2.x = r1.x - r2.width;
+                    } else {
+                        Installer.log.fine("there is not enough place");
+                        if ((r1.width + r2.width) < s.width) {
+                            Installer.log.fine("relocate both");
+                            r2.x = 0;
+                            r1.x = r2.width;
+                        } else {
+                            Installer.log.fine("relocate both and resize help");
+                            r1.x = s.width - r1.width;
+                            r2.x = 0;
+                            r2.width = r1.x;
+                        }
+                    }
+                }
+            } else {
+                //compare x axes of r1 and r2 to know how to relocate them
+                int r1Xaxis = r1.y + (r1.height / 2);
+                int r2Xaxis = r2.y + (r2.height / 2);
+                if (r1Xaxis <= r2Xaxis) {
+                    Installer.log.fine(" send help to the bottom");
+                    if ((r1.y + r1.height + r2.height) <= s.height) {
+                        Installer.log.fine("there is enough place fo help");
+                        r2.y = r1.y + r1.height;
+                    } else {
+                        Installer.log.fine("there is not enough place");
+                        if ((r1.height + r2.height) < s.height) {
+                            Installer.log.fine("relocate both");
+                            r2.y = s.height - r2.height;
+                            r1.y = r2.y - r1.height;
+                        } else {
+                            Installer.log.fine("relocate both and resize help");
+                            r1.y = 0;
+                            r2.y = r1.height;
+                            r2.height = s.height - r1.height;
+                        }
+                    }
+                } else {
+                    Installer.log.fine("send help to the top");
+                    if ((r1.y - r2.height) > 0) {
+                        Installer.log.fine("there is enough place for help");
+                        r2.y = r1.y - r2.height;
+                    } else {
+                        Installer.log.fine("there is not enough place");
+                        if ((r1.height + r2.height) < s.height) {
+                            Installer.log.fine("relocate both");
+                            r2.y = 0;
+                            r1.y = r2.height;
+                        } else {
+                            Installer.log.fine("relocate both and resize help");
+                            r1.y = s.height - r1.height;
+                            r2.y = 0;  //or with -1
+                            r2.height = r1.y;
+                        }
+                    }
+                }
+            }
+            dlg.setBounds(r1);
+            dialogOrFrameViewer.setBounds(r2);
+        }
+    }
+
+    /**
+     * Make a dialog showing progress of parsing & merging help sets.
+     * Show it; when the runnable is done, it will hide itself.
+     *
+     * @param run    something to do while it is showing
+     * @param parent dialog (may be null)
+     * @return a new progress dialog
+     */
+    private JDialog createProgressDialog(Runnable run, Dialog parent) {
+        return (parent == null) ?
+                new ProgressDialog(run, WindowManager.getDefault().getMainWindow()) :
+                new ProgressDialog(run, parent);
+    }
+
+    /**
+     * Find the proper help set for an ID.
+     *
+     * @param id the ID to look up (may be null)
+     * @return the proper help set (master if not otherwise found)
+     */
+    private HelpSet findHelpSetForID(String id) {
+        if (id != null) {
+            Iterator it = getHelpSets().iterator();
+            while (it.hasNext()) {
+                HelpSet hs = (HelpSet) it.next();
+                if (hs.getCombinedMap().isValidID(id, hs))
+                    return hs;
+            }
+            warnBadID(id);
+        }
+        return getMaster();
+    }
+
+    public Boolean isValidID(String id, boolean force) {
+        if (force || helpSetsReady()) {
+            Iterator it = getHelpSets().iterator();
+            if (MASTER_ID.equals(id)) {
+                if (it.hasNext()) {
+                    Installer.log.fine("master id, and >=1 help set");
+                    return Boolean.TRUE;
+                } else {
+                    Installer.log.fine("master id, and 0 help sets");
+                    return Boolean.FALSE;
+                }
+            } else {
+                // Regular ID.
+                while (it.hasNext()) {
+                    HelpSet hs = (HelpSet) it.next();
+                    if (hs.getCombinedMap().isValidID(id, hs)) {
+                        Installer.log.fine("found normal valid id " + id + " in " + hs.getTitle());
+                        return Boolean.TRUE;
+                    }
+                }
+                Installer.log.log(force ? Level.INFO : Level.FINE,
+                        "did not find id {0}", id);                     //NOI18N
+                return Boolean.FALSE;
+            }
+        } else {
+            Installer.log.fine("not checking " + id + " specifically");
+            return null;
+        }
+    }
+
+    /**
+     * Display something in a JHelp.
+     * Handles {@link #MASTER_ID}, as well as help IDs
+     * that were not found in any help set, various exceptions, etc.
+     *
+     * @param jh     the help component
+     * @param helpID a help ID string to display, may be <CODE>null</CODE>
+     * @param url    a URL to display, may be <CODE>null</CODE>; lower priority than the help ID
+     */
+    private synchronized void displayInJHelp(JHelp jh, String helpID, URL url) {
+        if (jh == null) throw new NullPointerException();
+        if (jh.getModel() == null) throw new IllegalArgumentException();
+        Installer.log.fine("displayInJHelp: " + helpID + " " + url);
+        assert SwingUtilities.isEventDispatchThread() :
+                "Please, re-open Bug #168973"; // NOI18N
+        try {
+            if (helpID != null && !helpID.equals(MASTER_ID)) {
+                HelpSet hs = jh.getModel().getHelpSet();
+                if (hs.getCombinedMap().isValidID(helpID, hs)) {
+                    HelpSet helpsetForId = findHelpSetForID(helpID); // #234143
+                    if (helpsetForId != getMaster()) {
+                        ID id = ID.create(helpID, helpsetForId);
+                        try {
+                            jh.setCurrentID(id);
+                        } catch (InvalidHelpSetContextException ex) {
+                            jh.setCurrentID(helpID);
+                        }
+                    } else {
+                        jh.setCurrentID(helpID);
+                    }
+                } else {
+                    warnBadID(helpID);
+                }
+            } else if (url != null) {
+                jh.setCurrentURL(url);
+            }
+        } catch (RuntimeException e) {
+            Installer.log.log(Level.WARNING, null, e);
+        }
+    }
+
+    /**
+     * Create &amp; return a JHelp with the supplied help set.
+     * In the case of the master help, will show the home page for
+     * the distinguished help set if there is exactly one such,
+     * or in the case of exactly one home page, will show that.
+     * Caches the result and the result may be a reused JHelp.
+     *
+     * @param hs the help set to show
+     * @return the new JHelp
+     */
+    private JHelp createJHelp(HelpSet hs) {
+        if (hs == null) throw new NullPointerException();
+        JHelp jh;
+        synchronized (availableJHelps) {
+            Reference<JHelp> r = availableJHelps.get(hs);
+            if (r != null) {
+                jh = r.get();
+                if (jh != null) {
+                    return jh;
+                }
+            }
+        }
+        String title = null; // for debugging purposes
+        try {
+            title = hs.getTitle();
+            assert SwingUtilities.isEventDispatchThread() :
+                    "Please, re-open Bug #168973"; // NOI18N
+            jh = new JHelp(hs);
+            adjust(jh);
+        } catch (RuntimeException e) {
+            Installer.log.log(Level.WARNING, "While trying to display: " + title, e); // NOI18N
+            return null;
+        }
+        synchronized (availableJHelps) {
+            availableJHelps.put(hs, new SoftReference<JHelp>(jh));
+        }
+        try {
+            ID home = hs.getHomeID();
+            if (home != null) {
+                jh.setCurrentID(home);
+            }
+        } catch (Exception e) {
+            Installer.log.log(Level.WARNING, null, e);
+        }
+        return jh;
+    }
+
+    private void adjust(JHelp jh) {
+        JEditorPane contentViewer = (JEditorPane) getContentViewer(jh);
+        if (contentViewer == null) {
+            // Issue #168849
+            Installer.log.severe(
+                    "Unable to find a JavaHelp Content Viewer component."); // NOI18N
+            Installer.log.severe("JavaHelp loaded from: " +
+                    getCodeLocation(jh.getClass())); // NOI18N
+            Installer.log.severe("Current thread: " +
+                    Thread.currentThread().toString()); // NOI18N
+            return;
+        }
+        adjustFontSize(contentViewer);
+        HyperlinkEventProcessor.addTo(contentViewer); // Issue #57005
+    }
+
+    private void adjustFontSize(JEditorPane contentViewer) {
+        if (contentViewer != null) {
+            contentViewer.putClientProperty(
+                    JEditorPane.W3C_LENGTH_UNITS, Boolean.TRUE);
+            contentViewer.putClientProperty(
+                    JEditorPane.HONOR_DISPLAY_PROPERTIES, Boolean.TRUE);
+        }
+    }
+
+    // XXX(ttran) see JDK bug 5092094 for details
+
+    /**
+     * Gets an instance of the the JavaHelp Content Viewer from the component
+     * hierarchy specified by its root component.
+     *
+     * @param c the root component of the JavaHelp component hierarchy, e.g.
+     *          an instance of the javax.help.JHelp class.
+     * @return a instance of the JavaHelp Content Viewer component if it
+     * possible, otherwise <code>null</code>.
+     */
+    Component getContentViewer(Component c) {
+        // this method has the package private visibility for testing purposes.
+        if (isContentViewer(c)) {
+            return c;
+        }
+        if (c instanceof Container) {
+            Component[] cs = ((Container) c).getComponents();
+            for (int i = 0; i < cs.length; i++) {
+                c = getContentViewer(cs[i]);
+                if (isContentViewer(c)) {
+                    return c;
+                }
+            }
+        }
+        return null; // The component hierarchy doesn't contain
+        // expected JH Content Viewer
+    }
+
+    private final class ProgressDialog extends JDialog implements TaskListener, Runnable {
+        private Runnable run;
+
+        public ProgressDialog(Runnable run, Dialog parent) {
+            super(parent, NbBundle.getMessage(JavaHelp.class, "TITLE_loading_help_sets"), true);
+            init(run);
+        }
+
+        public ProgressDialog(Runnable run, Frame parent) {
+            super(parent, NbBundle.getMessage(JavaHelp.class, "TITLE_loading_help_sets"), true);
+            init(run);
+        }
+
+        private void init(Runnable run) {
+            this.run = run;
+            JComponent c = ProgressHandleFactory.createProgressComponent(progressHandle);
+            c.setPreferredSize(new Dimension(3 * c.getPreferredSize().width, 3 * c.getPreferredSize().height));
+            c.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+            getContentPane().add(c);
+            progressHandle.start();
+            getAccessibleContext().setAccessibleDescription(NbBundle.getMessage(JavaHelp.class, "ACSD_Loading_Dialog"));  //NOI18N
+            pack();
+            Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
+            Dimension me = getSize();
+            setLocation((screen.width - me.width) / 2, (screen.height - me.height) / 2);
+        }
+
+        public @Override void setVisible(boolean show) {
+            if (show && run != null) {
+                Installer.log.fine("posting request from progress dialog...");
+                getHelpLoader().post(run).addTaskListener(this);
+                run = null;
+            }
+            super.setVisible(show);
+        }
+
+        public void taskFinished(Task task) {
+            Installer.log.fine("posting request from progress dialog...request finished.");
+            SwingUtilities.invokeLater(this);
+        }
+
+        public void run() {
+            setVisible(false);
+            dispose();
+        }
+    }
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/Installer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/Installer.java b/src/main/java/eu/esa/snap/netbeans/javahelp/Installer.java
new file mode 100644
--- /dev/null	(date 1683618975163)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/Installer.java	(date 1683618975163)
@@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import eu.esa.snap.netbeans.javahelp.api.Help;
+import org.openide.modules.ModuleInstall;
+import org.openide.util.Lookup;
+
+import javax.swing.UIDefaults;
+import javax.swing.UIManager;
+import java.util.ConcurrentModificationException;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Set;
+import java.util.logging.Logger;
+
+public class Installer extends ModuleInstall {
+
+    public static final Logger log = Logger.getLogger("eu.esa.snap.netbeans.javahelp"); // NOI18N
+    public static final Logger UI = Logger.getLogger("org.netbeans.ui.javahelp"); // NOI18N
+    public static final Logger USG = Logger.getLogger("org.netbeans.ui.metrics.javahelp"); // NOI18N
+
+    private static void cleanDefaults(UIDefaults d) {
+        Set<Object> badKeys = new HashSet<Object>(10);
+        Iterator<Map.Entry<Object, Object>> it = d.entrySet().iterator();
+        ClassLoader aboutToDie = Installer.class.getClassLoader();
+        while (it.hasNext()) {
+            Map.Entry<Object, Object> e;
+            try {
+                e = it.next();
+            } catch (ConcurrentModificationException x) {
+                // Seems to be possible during shutdown. Just skip the hack in this case.
+                return;
+            }
+            Object k = e.getKey();
+            Object o = e.getValue();
+            if (o instanceof Class) {
+                Class c = (Class) o;
+                if (c.getClassLoader() == aboutToDie) {
+                    badKeys.add(k);
+                }
+            } else if (k instanceof Class) {
+                Class c = (Class) k;
+                if (c.getClassLoader() == aboutToDie) {
+                    badKeys.add(k);
+                }
+            }
+        }
+        if (!badKeys.isEmpty()) {
+            log.fine("Cleaning up old UIDefaults keys (JRE bug #4675772): " + badKeys);
+            for (Object o : badKeys) {
+                d.put(o, null);
+            }
+        }
+    }
+
+    public void restored() {
+        log.fine("restored module");
+        // This ensures the static block will be called ASAP, hence that
+        // the AWT listener will actually be started quickly and there
+        // will already have been interesting mouse-entered events
+        // by the time F1 is first pressed. Otherwise only the second
+        // F1 actually gets anything other than the main window help.
+        HelpAction.WindowActivatedDetector.install();
+
+        // XXX(-ttran) quick fix for #25470: Help viewer frozen on first open
+        // over modal dialogs.  JavaHelp seems to try to be lazy with the
+        // installation of its Dialog detector (an AWTEventListener) but it
+        // doesn't work on Windows.  Here we force JavaHelp instance to be
+        // created and thus its AWTEventListener be registered early enough.
+
+        Help lookup = Lookup.getDefault().lookup(Help.class);
+    }
+
+    public void uninstalled() {
+        log.fine("uninstalled module");
+        Help help = Lookup.getDefault().lookup(Help.class);
+        if (help instanceof eu.esa.snap.netbeans.javahelp.JavaHelp) {
+            ((JavaHelp) help).deactivate();
+        }
+        HelpAction.WindowActivatedDetector.uninstall();
+        // UIManager is too aggressive about caching, and we get CCE's,
+        // since JavaHelp's HelpUtilities sets up these defaults, and UIManager
+        // caches the actual classes (probably incorrectly). #4675772
+        cleanDefaults(UIManager.getDefaults());
+        cleanDefaults(UIManager.getLookAndFeelDefaults());
+    }
+
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/HelpAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/HelpAction.java b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpAction.java
new file mode 100644
--- /dev/null	(date 1683620623701)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpAction.java	(date 1683620623701)
@@ -0,0 +1,162 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import eu.esa.snap.netbeans.javahelp.api.Help;
+import org.openide.awt.ActionID;
+import org.openide.awt.ActionReference;
+import org.openide.awt.ActionRegistration;
+import org.openide.awt.StatusDisplayer;
+import org.openide.util.HelpCtx;
+import org.openide.util.Lookup;
+import org.openide.util.NbBundle;
+import org.openide.windows.TopComponent;
+
+import javax.swing.AbstractAction;
+import javax.swing.MenuElement;
+import javax.swing.MenuSelectionManager;
+import javax.swing.SwingUtilities;
+import java.awt.AWTEvent;
+import java.awt.Component;
+import java.awt.Container;
+import java.awt.GraphicsEnvironment;
+import java.awt.Toolkit;
+import java.awt.Window;
+import java.awt.event.AWTEventListener;
+import java.awt.event.ActionEvent;
+import java.awt.event.WindowEvent;
+import java.util.logging.Level;
+
+/**
+ * Shows help for the currently focused component
+ *
+ * @author Jesse Glick
+ */
+@ActionID(category = "Help", id = "eu.esa.snap.netbeans.javahelp.HelpAction")
+@ActionRegistration(displayName = "#LBL_HelpAction", iconBase = "eu/esa/snap/netbeans/javahelp/resources/show-help.gif",
+        /* OpenIDE-Transmodal-Action must be present from the start (#206089) */ lazy = false)
+@ActionReference(path = "Shortcuts", name = "F1")
+public class HelpAction extends AbstractAction {
+
+    public HelpAction() {
+        Installer.log.fine("HelpAction.initialize");
+        // Cf. org.netbeans.core.windows.frames.ShortcutAndMenuKeyEventProcessor
+        putValue("OpenIDE-Transmodal-Action", true); // NOI18N
+    }
+
+    private static HelpCtx findHelpCtx() {
+
+        final TopComponent activeTC = TopComponent.getRegistry().getActivated();
+        final Window win = WindowActivatedDetector.getCurrentActivatedWindow();
+        final Container cont;
+        if (activeTC != null && win != null && win.isAncestorOf(activeTC)) {
+            cont = activeTC;
+        } else {
+            cont = win;
+        }
+        if (cont == null) {
+            return HelpCtx.DEFAULT_HELP;
+        } else {
+            Component focused = SwingUtilities.findFocusOwner(cont);
+            HelpCtx help = HelpCtx.findHelp(focused == null ? cont : focused);
+            Installer.log.log(Level.FINE, "HelpCtx {0} from {1}",
+                    new Object[]{help, focused});
+            return help;
+        }
+    }
+
+    @Override
+    public void actionPerformed(ActionEvent ev) {
+        Help h = (Help) Lookup.getDefault().lookup(Help.class);
+        if (h == null) {
+            Toolkit.getDefaultToolkit().beep();
+            return;
+        }
+
+        HelpCtx help;
+
+        final MenuElement[] path =
+                MenuSelectionManager.defaultManager().getSelectedPath();
+
+        if (path != null
+                && path.length > 0
+                && !(path[0].getComponent() instanceof javax.swing.plaf.basic.ComboPopup)
+        ) {
+            help = HelpCtx.findHelp(path[path.length - 1].getComponent());
+
+            SwingUtilities.invokeLater(new Runnable() {
+                public void run() {
+                    MenuElement[] newPath =
+                            MenuSelectionManager.defaultManager().getSelectedPath();
+
+                    if (newPath.length != path.length)
+                        return;
+                    for (int i = 0; i < newPath.length; i++) {
+                        if (newPath[i] != path[i])
+                            return;
+                    }
+                    MenuSelectionManager.defaultManager().clearSelectedPath();
+                }
+            });
+        } else {
+            help = findHelpCtx();
+        }
+
+        StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(HelpAction.class, "CTL_OpeningHelp"));
+        h.showHelp(help);
+    }
+
+    static class WindowActivatedDetector implements AWTEventListener {
+        private static java.lang.ref.WeakReference<Window> currentWindowRef;
+        private static WindowActivatedDetector detector = null;
+
+        static synchronized void install() {
+            if (detector == null && !GraphicsEnvironment.isHeadless()) {
+                detector = new WindowActivatedDetector();
+                Toolkit.getDefaultToolkit().addAWTEventListener(detector, AWTEvent.WINDOW_EVENT_MASK);
+            }
+        }
+
+        static synchronized void uninstall() {
+            if (detector != null) {
+                Toolkit.getDefaultToolkit().removeAWTEventListener(detector);
+                detector = null;
+            }
+        }
+
+        static synchronized Window getCurrentActivatedWindow() {
+            if (currentWindowRef != null) {
+                return currentWindowRef.get();
+            } else {
+                return null;
+            }
+        }
+
+        private static synchronized void setCurrentActivatedWindow(Window w) {
+            currentWindowRef = new java.lang.ref.WeakReference<Window>(w);
+        }
+
+        public void eventDispatched(AWTEvent ev) {
+            if (ev.getID() != WindowEvent.WINDOW_ACTIVATED)
+                return;
+            setCurrentActivatedWindow(((WindowEvent) ev).getWindow());
+        }
+    }
+}
Index: target/nbm/netbeans/extra/config/Modules/eu-esa-snap-netbeans-snap-help-system.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/nbm/netbeans/extra/config/Modules/eu-esa-snap-netbeans-snap-help-system.xml b/target/nbm/netbeans/extra/config/Modules/eu-esa-snap-netbeans-snap-help-system.xml
new file mode 100644
--- /dev/null	(date 1683622266300)
+++ b/target/nbm/netbeans/extra/config/Modules/eu-esa-snap-netbeans-snap-help-system.xml	(date 1683622266300)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE module PUBLIC "-//NetBeans//DTD Module Status 1.0//EN"
+                        "http://www.netbeans.org/dtds/module-status-1_0.dtd">
+<module name="eu.esa.snap.netbeans.snap.help.system">
+    <param name="autoload">false</param>
+    <param name="eager">false</param>
+    <param name="enabled">true</param>
+    <param name="jar">modules/eu-esa-snap-netbeans-snap-help-system.jar</param>
+    <param name="reloadable">false</param>
+</module>
Index: src/main/java/eu/esa/snap/netbeans/javahelp/AbstractHelp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/AbstractHelp.java b/src/main/java/eu/esa/snap/netbeans/javahelp/AbstractHelp.java
new file mode 100644
--- /dev/null	(date 1683618975148)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/AbstractHelp.java	(date 1683618975148)
@@ -0,0 +1,139 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import eu.esa.snap.netbeans.javahelp.api.Help;
+import org.openide.util.ChangeSupport;
+import org.openide.util.Lookup;
+import org.openide.util.LookupEvent;
+import org.openide.util.LookupListener;
+
+import javax.help.HelpSet;
+import javax.swing.SwingUtilities;
+import javax.swing.event.ChangeListener;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+import java.util.logging.Level;
+
+/**
+ * An implementation of the JavaHelp system (a little more concrete).
+ *
+ * @author Jesse Glick
+ */
+public abstract class AbstractHelp extends Help implements HelpConstants {
+
+    private final ChangeSupport cs = new ChangeSupport(this);
+    /**
+     * the results of the search for helpsets
+     */
+    private Lookup.Result<HelpSet> helpsets = null;
+
+    /**
+     * constructor for subclasses
+     */
+    protected AbstractHelp() {
+    }
+
+    /**
+     * Get all available help sets.
+     * Pay attention to {@link #helpSetsChanged} to see
+     * when this set will change.
+     *
+     * @return a collection of HelpSet
+     */
+    protected final Collection<? extends HelpSet> getHelpSets() {
+        if (helpsets == null) {
+            Installer.log.fine("searching for instances of HelpSet...");
+            helpsets = Lookup.getDefault().lookupResult(HelpSet.class);
+            helpsets.addLookupListener(new LookupListener() {
+                public void resultChanged(LookupEvent ev) {
+                    helpSetsChanged();
+                }
+            });
+            fireChangeEvent(); // since someone may be listening to whether they are ready
+        }
+        Collection<? extends HelpSet> c = helpsets.allInstances();
+        if (Installer.log.isLoggable(Level.FINE)) {
+            List<String> l = new ArrayList<String>(Math.min(1, c.size()));
+            for (HelpSet hs : c) {
+                l.add(hs.getTitle());
+            }
+            Installer.log.fine("listing helpsets: " + l);
+        }
+        return c;
+    }
+
+    /**
+     * Are the help sets ready?
+     *
+     * @return true if they have been loaded
+     */
+    protected final boolean helpSetsReady() {
+        return helpsets != null;
+    }
+
+    /**
+     * Whether a given help set is supposed to be merged
+     * into the master set.
+     *
+     * @param hs the help set
+     * @return true if so
+     */
+    protected final boolean shouldMerge(HelpSet hs) {
+        Boolean b = (Boolean) hs.getKeyData(HELPSET_MERGE_CONTEXT, HELPSET_MERGE_ATTR);
+        return (b == null) || b.booleanValue();
+    }
+
+    /**
+     * Called when the set of available help sets changes.
+     * Fires a change event to listeners; subclasses may
+     * do extra cleanup.
+     */
+    protected void helpSetsChanged() {
+        Installer.log.fine("helpSetsChanged");
+        fireChangeEvent();
+    }
+
+    public final void addChangeListener(ChangeListener l) {
+        cs.addChangeListener(l);
+    }
+
+    public final void removeChangeListener(ChangeListener l) {
+        cs.removeChangeListener(l);
+    }
+
+    /**
+     * Fire a change event to all listeners.
+     */
+    private final void fireChangeEvent() {
+        if (!SwingUtilities.isEventDispatchThread()) {
+            SwingUtilities.invokeLater(new Runnable() {
+                public void run() {
+                    fireChangeEvent();
+                }
+            });
+            return;
+        }
+        Installer.log.fine("Help.stateChanged");
+        cs.fireChange();
+    }
+
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/HelpConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/HelpConstants.java b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpConstants.java
new file mode 100644
--- /dev/null	(date 1683618975167)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpConstants.java	(date 1683618975167)
@@ -0,0 +1,69 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+
+/**
+ * Useful constants pertaining to the help system.
+ *
+ * @author Jesse Glick
+ */
+public interface HelpConstants {
+
+    /**
+     * public ID for standard helpset DTD
+     */
+    String PUBLIC_ID_HELPSET = "-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 1.0//EN"; // NOI18N
+    /**
+     * public ID for NetBeans reference to a helpset
+     */
+    String PUBLIC_ID_HELPSETREF = "-//NetBeans//DTD JavaHelp Help Set Reference 1.0//EN"; // NOI18N
+    /**
+     * public URL for NetBeans reference to a helpset
+     */
+    String PUBLIC_URL_HELPSETREF = "http://www.netbeans.org/dtds/helpsetref-1_0.dtd"; // NOI18N
+    /**
+     * public ID for a help context link
+     */
+    String PUBLIC_ID_HELPCTX = "-//NetBeans//DTD Help Context 1.0//EN"; // NOI18N
+    /**
+     * public URL for a help context link DTD
+     */
+    String PUBLIC_URL_HELPCTX = "http://www.netbeans.org/dtds/helpcontext-1_0.dtd"; // NOI18N
+    /**
+     * "context" for merge attribute on helpsets
+     */
+    String HELPSET_MERGE_CONTEXT = "OpenIDE"; // NOI18N
+    /**
+     * attribute (type Boolean) on helpsets indicating
+     * whether they should be merged into the master or
+     * not; by default, true
+     */
+    String HELPSET_MERGE_ATTR = "mergeIntoMaster"; // NOI18N
+    /**
+     * A helpID present only in the master help set;
+     * however, when displayed by {@link #showHelp} as the helpID in a context,
+     * the master help set (with merged-in children) will be shown instead,
+     * with no change made to the content pane.
+     * Also, this is the help ID mapped to the "default" page in the master help viewer.
+     */
+    String MASTER_ID = "eu.esa.snap.netbeans.javahelp.MASTER_ID"; // NOI18N
+
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuery.java b/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuery.java
new file mode 100644
--- /dev/null	(date 1683618975134)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuery.java	(date 1683618975134)
@@ -0,0 +1,254 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import eu.esa.snap.netbeans.javahelp.api.Help;
+import org.openide.util.Lookup;
+import org.openide.util.NbBundle;
+
+import javax.help.SearchHit;
+import javax.help.SearchTOCItem;
+import javax.help.search.SearchEngine;
+import javax.help.search.SearchEvent;
+import javax.help.search.SearchItem;
+import javax.help.search.SearchListener;
+import javax.help.search.SearchQuery;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.Enumeration;
+import java.util.List;
+import java.util.Locale;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+/**
+ * Search Java Help for given string.
+ *
+ * @author S. Aubrecht
+ */
+class JavaHelpQuery implements Comparator<SearchTOCItem> {
+
+    private static final Logger LOG =
+            Logger.getLogger(JavaHelpQuery.class.getName());
+    private static JavaHelpQuery theInstance;
+    private SearchEngine engine;
+
+    private JavaHelpQuery() {
+    }
+
+    public static JavaHelpQuery getDefault() {
+        if (null == theInstance)
+            theInstance = new JavaHelpQuery();
+        return theInstance;
+    }
+
+    @Override
+    public int compare(SearchTOCItem o1, SearchTOCItem o2) {
+        int res = o2.hitCount() - o1.hitCount();
+        if (0 == res) {
+            double conf1 = o1.getConfidence();
+            double conf2 = o2.getConfidence();
+            if (conf1 < conf2)
+                res = -11;
+            else if (conf1 > conf2)
+                res = 1;
+        }
+        return res;
+    }
+
+    public synchronized List<SearchTOCItem> search(String searchString) {
+        if (null == engine) {
+            engine = createSearchEngine();
+        }
+        List<SearchTOCItem> res = new ArrayList<SearchTOCItem>();
+        Thread searchThread = new Thread(createSearch(searchString, res),
+                "JavaHelpQuery.search[" + searchString + "]"); // NOI18N
+        searchThread.start();
+        try {
+            //the first search can take a moment before all the helpsets are merged
+            searchThread.join(60 * 1000);
+        } catch (InterruptedException iE) {
+            //ignore
+        }
+        return res;
+    }
+
+    private Runnable createSearch(final String searchString,
+                                  final List<SearchTOCItem> items) {
+        Runnable res = new Runnable() {
+
+            @Override
+            public void run() {
+                if (null == engine) {
+                    return;
+                }
+                SynchronizedSearchListener ssl =
+                        new SynchronizedSearchListener(items);
+                SearchQuery query = engine.createQuery();
+                query.addSearchListener(ssl);
+                query.start(searchString, Locale.getDefault());
+                synchronized (ssl) {
+                    while (!ssl.isSearchDone()) { // #148850
+                        try {
+                            ssl.wait();
+                        } catch (InterruptedException ex) {
+                            //ignore
+                        }
+                    }
+                }
+                //sort the result by their relevance
+                Collections.sort(items, JavaHelpQuery.this);
+            }
+        };
+        return res;
+    }
+
+    private SearchEngine createSearchEngine() {
+        SearchEngine se = null;
+        Help h = (Help) Lookup.getDefault().lookup(Help.class);
+        if (h != null && h instanceof JavaHelp) {
+            JavaHelp jh = (JavaHelp) h;
+            se = jh.createSearchEngine();
+            if (null == se) {
+                LOG.log(Level.INFO,
+                        NbBundle.getMessage(JavaHelpQuery.class,
+                                "Err_CreateJavaHelpSearchEngine")); //NOI18N
+                se = new DummySearchEngine();
+            }
+        }
+        return se;
+    }
+
+    private static class DummySearchEngine extends SearchEngine {
+        @Override
+        public SearchQuery createQuery() throws IllegalStateException {
+            return new DummySearchQuery(this);
+        }
+    } // DummySearchEngine
+
+    private static class DummySearchQuery extends SearchQuery {
+
+        private List<SearchListener> listeners = new ArrayList<SearchListener>(1);
+
+        public DummySearchQuery(DummySearchEngine se) {
+            super(se);
+        }
+
+        @Override
+        public void addSearchListener(SearchListener arg0) {
+            listeners.add(arg0);
+        }
+
+        @Override
+        public void removeSearchListener(SearchListener arg0) {
+            listeners.remove(arg0);
+        }
+
+        @Override
+        public void start(String arg0, Locale arg1)
+                throws IllegalArgumentException, IllegalStateException {
+            SearchEvent se = new SearchEvent(this, "", false);
+            for (SearchListener sl : listeners) {
+                sl.searchStarted(se);
+                sl.searchFinished(se);
+            }
+        }
+
+        @Override
+        public void stop() throws IllegalStateException {
+            //do nothing
+        }
+
+        @Override
+        public boolean isActive() {
+            return false;
+        }
+
+    } // DummySearchQuery
+
+    private class SynchronizedSearchListener implements SearchListener {
+
+        private final List<SearchTOCItem> items;
+        private boolean searchDone = false;
+
+        public SynchronizedSearchListener(final List<SearchTOCItem> items) {
+            this.items = items;
+        }
+
+        @Override
+        public void itemsFound(SearchEvent se) {
+            addItemsToList(se.getSearchItems(), items);
+        }
+
+        @Override
+        public void searchStarted(SearchEvent se) {
+        }
+
+        @Override
+        public void searchFinished(SearchEvent se) {
+            synchronized (this) {
+                searchDone = true;
+                notifyAll();
+            }
+        }
+
+        public boolean isSearchDone() {
+            return searchDone;
+        }
+
+        private void addItemsToList(Enumeration searchItems,
+                                    List<SearchTOCItem> results) {
+            if (null == searchItems)
+                return;
+            while (searchItems.hasMoreElements()) {
+                SearchItem si = (SearchItem) searchItems.nextElement();
+                URL url;
+                try {
+                    url = new URL(si.getBase(), si.getFilename());
+                } catch (MalformedURLException murlE) {
+                    LOG.log(Level.FINE,
+                            "Invalid URL in SearchItem: " + si.getTitle(),
+                            murlE); //NOI18N
+                    continue;
+                }
+                boolean foundToc = false;
+                for (SearchTOCItem toc : results) {
+                    URL testURL = toc.getURL();
+                    if (testURL != null && url != null && url.sameFile(testURL)) {
+                        toc.addSearchHit(new SearchHit(si.getConfidence(),
+                                si.getBegin(),
+                                si.getEnd()));
+                        foundToc = true;
+                        break;
+                    }
+                }
+                if (!foundToc) {
+                    SearchTOCItem toc = new SearchTOCItem(si);
+                    results.add(toc);
+                }
+            }
+        }
+
+    } // SynchronizedSearchListener
+
+}
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/master-help.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/master-help.xml b/target/classes/eu/esa/snap/netbeans/javahelp/resources/master-help.xml
new file mode 100644
--- /dev/null	(date 1683618975178)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/master-help.xml	(date 1683618975178)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE helpctx PUBLIC
+        "-//NetBeans//DTD Help Context 1.0//EN"
+        "http://www.netbeans.org/dtds/helpcontext-1_0.dtd">
+<helpctx id="eu.esa.snap.netbeans.javahelp.MASTER_ID" showmaster="true"/>
Index: src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayer.java b/src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayer.java
new file mode 100644
--- /dev/null	(date 1683618975161)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayer.java	(date 1683618975161)
@@ -0,0 +1,534 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import com.sun.java.help.impl.ViewAwareComponent;
+import org.openide.awt.HtmlBrowser;
+import org.openide.util.NbBundle;
+
+import javax.swing.JButton;
+import javax.swing.JPopupMenu;
+import javax.swing.SwingConstants;
+import javax.swing.UIManager;
+import javax.swing.border.EmptyBorder;
+import javax.swing.text.AttributeSet;
+import javax.swing.text.SimpleAttributeSet;
+import javax.swing.text.StyleConstants;
+import javax.swing.text.View;
+import javax.swing.text.html.HTMLDocument;
+import javax.swing.text.html.StyleSheet;
+import java.awt.Color;
+import java.awt.Cursor;
+import java.awt.Font;
+import java.awt.FontMetrics;
+import java.awt.Insets;
+import java.awt.datatransfer.Clipboard;
+import java.awt.datatransfer.Transferable;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.awt.event.MouseEvent;
+import java.awt.event.MouseListener;
+import java.net.MalformedURLException;
+import java.net.URL;
+
+/**
+ * This class is a lightweight component to be included in HTML content within
+ * JHContentViewer. It invokes default IDE html browser to show external URL.
+ * (Default browser should be external browser to show external URL properly.
+ * Component is displayed as a mouse enabled Label. Only text is supported.
+ * <p>
+ * To use this class within HTML content use the &ltobject&gt tag. Below is an
+ * example usage:
+ * <p><pre>
+ * &ltobject CLASSID="java:org.netbeans.module.javahelp.BrowserDisplayer"&gt
+ * &ltparam name="content" value="http://www.netbeans.org"&gt
+ * &ltparam name="text" value="Click here"&gt
+ * &ltparam name="textFontFamily" value="SansSerif"&gt
+ * &ltparam name="textFontSize" value="x-large"&gt
+ * &ltparam name="textFontWeight" value="plain"&gt
+ * &ltparam name="textFontStyle" value="italic"&gt
+ * &ltparam name="textColor" value="red"&gt
+ * &lt/object&gt
+ * </pre><p>
+ * Valid parameters are:
+ * <ul>
+ * <li>content - a valid external url like http://java.sun.com
+ * <li>text - the text of the activator
+ * <li>textFontFamily - the font family of the activator text
+ * <li>textFontSize - the size of the activator text font. Size is specified
+ * in a css terminology. See the setTextFontSize for acceptable syntax.
+ * <li>textFontWeight - the activator text font weight
+ * <li>textFontStyle - activator text font style
+ * <li>textColor - the activator text color
+ * <ul>
+ *
+ * @author Marek Slama
+ */
+public class BrowserDisplayer extends JButton
+        implements ActionListener, ViewAwareComponent, CopyLinkLocationAction.LinkOwner {
+    private final static Cursor handCursor =
+            Cursor.getPredefinedCursor(Cursor.HAND_CURSOR);
+    private View myView;
+    private SimpleAttributeSet textAttribs;
+    private HTMLDocument doc;
+    private URL base;
+    private Cursor origCursor;
+
+    private JPopupMenu popupMenu;
+    /**
+     * properties
+     */
+    private String content = "";
+
+    /**
+     * Create a secondaryviewer. By default the viewer creates a button with
+     * the text of ">"
+     */
+    public BrowserDisplayer() {
+        super();
+        setMargin(new Insets(0, 0, 0, 0));
+        createLinkLabel();
+        addActionListener(this);
+        origCursor = getCursor();
+        getAccessibleContext().setAccessibleDescription(
+                NbBundle.getMessage(BrowserDisplayer.class, "ACSD_Label"));
+        this.popupMenu =
+                HyperlinkEventProcessor.getPopupMenu(
+                        new CopyLinkLocationAction(this));
+        addMouseListener(new MouseListener() {
+            public void mouseClicked(MouseEvent e) {
+                setToolTipText(null);
+                if (Utils.isMouseRightClick(e)) {
+                    Utils.showPopupMenu(e, popupMenu, BrowserDisplayer.this);
+                }
+            }
+
+            public void mouseEntered(MouseEvent e) {
+                setCursor(handCursor);
+                setToolTipText(getContent());
+            }
+
+            public void mouseExited(MouseEvent e) {
+                setCursor(origCursor);
+                setToolTipText(null);
+            }
+
+            public void mousePressed(MouseEvent e) {
+            }
+
+            public void mouseReleased(MouseEvent e) {
+            }
+        });
+    }
+
+    /**
+     * Sets data optained from the View
+     */
+    public void setViewData(View v) {
+        myView = v;
+        doc = (HTMLDocument) myView.getDocument();
+        base = doc.getBase();
+
+        // Set the current font information in the local text attributes
+        Font font = getFont();
+        textAttribs = new SimpleAttributeSet();
+        textAttribs.removeAttribute(StyleConstants.FontSize);
+        textAttribs.removeAttribute(StyleConstants.Bold);
+        textAttribs.removeAttribute(StyleConstants.Italic);
+        textAttribs.addAttribute(StyleConstants.FontFamily,
+                font.getName());
+        textAttribs.addAttribute(StyleConstants.FontSize,
+                new Integer(font.getSize()));
+        textAttribs.addAttribute(StyleConstants.Bold,
+                Boolean.valueOf(font.isBold()));
+        textAttribs.addAttribute(StyleConstants.Italic,
+                Boolean.valueOf(font.isItalic()));
+    }
+
+    /**
+     * Returns the content of the secondary viewer
+     */
+    public String getContent() {
+        return content;
+    }
+
+    /**
+     * Set the content for the secondary viewer
+     *
+     * @param content a valid URL
+     */
+    public void setContent(String content) {
+        this.content = content;
+    }
+
+    /**
+     * Creates a link label. A link label is a form of a JButton but without a
+     * button like appearance.
+     */
+    private void createLinkLabel() {
+        setBorder(new EmptyBorder(1, 1, 1, 1));
+        setBorderPainted(false);
+        setFocusPainted(false);
+        setAlignmentY(getPreferredAlignmentY());
+        setContentAreaFilled(false);
+        setHorizontalAlignment(SwingConstants.LEFT);
+        setBackground(UIManager.getColor("EditorPane.background"));
+        if (textAttribs != null &&
+                textAttribs.isDefined(StyleConstants.Foreground)) {
+            setForeground((Color) textAttribs.getAttribute(StyleConstants.Foreground));
+        } else {
+            setForeground(Color.blue);
+        }
+        invalidate();
+    }
+
+    /**
+     * Determine the alignment offset so the text is aligned with other views
+     * correctly.
+     */
+    private float getPreferredAlignmentY() {
+        // Fix for the Issue #68316
+        Font font = getFont();
+        FontMetrics fm = getToolkit().getFontMetrics(font);
+        float h = fm.getHeight();
+        float d = fm.getDescent();
+        return (h - d) / h;
+
+// Original implementation below is commented out due to Issue #68316.
+// It tries also take into account a size of the icon, but according to javadoc
+// of the class "Only text is supported".
+// Original implementation is commented out below due to the bug #68316.
+// It tries also to take into account a size of the icon, but according to
+// javadoc of the class "Only text is supported".
+//
+//        Icon icon = (Icon)getIcon();
+//        String text = getText();
+//
+//        Font font = getFont();
+//        FontMetrics fm = getToolkit().getFontMetrics(font);
+//
+//        Rectangle iconR = new Rectangle();
+//        Rectangle textR = new Rectangle();
+//        Rectangle viewR = new Rectangle(Short.MAX_VALUE, Short.MAX_VALUE);
+//
+//        SwingUtilities.layoutCompoundLabel(
+//            this, fm, text, icon,
+//            getVerticalAlignment(), getHorizontalAlignment(),
+//            getVerticalTextPosition(), getHorizontalTextPosition(),
+//            viewR, iconR, textR,
+//	    (text == null ? 0 : ((BasicButtonUI)ui).getDefaultTextIconGap(this))
+//        );
+//
+//        // The preferred size of the button is the size of
+//        // the text and icon rectangles plus the buttons insets.
+//        Rectangle r = iconR.union(textR);
+//
+//        Insets insets = getInsets();
+//        r.height += insets.top + insets.bottom;
+//
+//        // Ensure that the height of the button is odd,
+//        // to allow for the focus line.
+//        if(r.height % 2 == 0) {
+//            r.height += 1;
+//        }
+//
+//        float offAmt = fm.getMaxAscent() + insets.top;
+//        return offAmt/(float)r.height;
+    }
+
+    /**
+     * Returns the text Font family name of the activator text
+     */
+    public String getTextFontFamily() {
+        return StyleConstants.getFontFamily(textAttribs);
+    }
+
+    /**
+     * Sets the text Font family for the activator text.
+     * For JDK 1.1 this must a family name of Dialog, DialogInput, Monospaced,
+     * Serif, SansSerif, or Symbol.
+     */
+    public void setTextFontFamily(String family) {
+        textAttribs.removeAttribute(StyleConstants.FontFamily);
+        textAttribs.addAttribute(StyleConstants.FontFamily, family);
+        setFont(getAttributeSetFont(textAttribs));
+        Font font = getFont();
+    }
+
+    /**
+     * Returns the text Font family name of the activator text
+     */
+    public String getTextFontSize() {
+        return Integer.toString(StyleConstants.getFontSize(textAttribs));
+    }
+
+    /**
+     * Sets the text size for the activator text.
+     * The String size is a valid Cascading Style Sheet value for
+     * text size. Acceptable values are as follows:
+     * <ul>
+     * <li>xx-small
+     * <li>x-small
+     * <li>small
+     * <li>medium
+     * <li>large
+     * <li>x-large
+     * <li>xx-large
+     * <li>bigger - increase the current base font size by 1
+     * <li>smaller - decrease the current base font size by 1
+     * <li>xxpt - set the font size to a specific pt value of "xx"
+     * <li>+x - increase the current base font size by a value of "x"
+     * <li>-x - decrease the current base font size by a value of "x"
+     * <li>x - set the font size to the point size associated with
+     * the index "x"
+     * </ul>
+     */
+    public void setTextFontSize(String size) {
+        int newsize;
+        StyleSheet css = doc.getStyleSheet();
+        try {
+            if (size.equals("xx-small")) {
+                newsize = (int) css.getPointSize(0);
+            } else if (size.equals("x-small")) {
+                newsize = (int) css.getPointSize(1);
+            } else if (size.equals("small")) {
+                newsize = (int) css.getPointSize(2);
+            } else if (size.equals("medium")) {
+                newsize = (int) css.getPointSize(3);
+            } else if (size.equals("large")) {
+                newsize = (int) css.getPointSize(4);
+            } else if (size.equals("x-large")) {
+                newsize = (int) css.getPointSize(5);
+            } else if (size.equals("xx-large")) {
+                newsize = (int) css.getPointSize(6);
+            } else if (size.equals("bigger")) {
+                newsize = (int) css.getPointSize("+1");
+            } else if (size.equals("smaller")) {
+                newsize = (int) css.getPointSize("-1");
+            } else if (size.endsWith("pt")) {
+                String sz = size.substring(0, size.length() - 2);
+                newsize = Integer.parseInt(sz);
+            } else {
+                newsize = (int) css.getPointSize(size);
+            }
+        } catch (NumberFormatException nfe) {
+            return;
+        }
+        if (newsize == 0) {
+            return;
+        }
+        textAttribs.removeAttribute(StyleConstants.FontSize);
+        textAttribs.addAttribute(StyleConstants.FontSize,
+                new Integer(newsize));
+        setFont(getAttributeSetFont(textAttribs));
+        Font font = getFont();
+    }
+
+    /**
+     * Returns the text Font weight of the activator text
+     */
+    public String getTextFontWeight() {
+        if (StyleConstants.isBold(textAttribs)) {
+            return "bold";
+        }
+        return "plain";
+    }
+
+    /**
+     * Sets the text Font Weigth for the activator text.
+     * Valid weights are
+     * <ul>
+     * <li>plain
+     * <li>bold
+     * </ul>
+     */
+    public void setTextFontWeight(String weight) {
+        boolean isBold = false;
+        if ("bold".equals(weight)) {
+            isBold = true;
+        } else {
+            isBold = false;
+        }
+        textAttribs.removeAttribute(StyleConstants.Bold);
+        textAttribs.addAttribute(StyleConstants.Bold, Boolean.valueOf(isBold));
+        setFont(getAttributeSetFont(textAttribs));
+        Font font = getFont();
+    }
+
+    /**
+     * Returns the text Font style of the activator text
+     */
+    public String getTextFontStyle() {
+        if (StyleConstants.isItalic(textAttribs)) {
+            return "italic";
+        }
+        return "plain";
+    }
+
+    /**
+     * Sets the text Font Style for the activator text.
+     * Valid font styles are
+     * <ul>
+     * <li>plain
+     * <li>italic
+     * </ul>
+     */
+    public void setTextFontStyle(String style) {
+        boolean isItalic = false;
+        if ("italic".equals(style)) {
+            isItalic = true;
+        } else {
+            isItalic = false;
+        }
+        textAttribs.removeAttribute(StyleConstants.Italic);
+        textAttribs.addAttribute(StyleConstants.Italic, Boolean.valueOf(isItalic));
+        setFont(getAttributeSetFont(textAttribs));
+        Font font = getFont();
+    }
+
+    /**
+     * Returns the text Color of the activator text
+     */
+    public String getTextColor() {
+        Color color = getForeground();
+        return color.toString();
+    }
+
+    /**
+     * Sets the text Color for the activator text.
+     * The following is a list of supported Color names
+     * <ul>
+     * <li>black
+     * <li>blue
+     * <li>cyan
+     * <li>darkGray
+     * <li>gray
+     * <li>green
+     * <li>lightGray
+     * <li>magenta
+     * <li>orange
+     * <li>pink
+     * <li>red
+     * <li>white
+     * <li>yellow
+     * </ul>
+     */
+    public void setTextColor(String name) {
+        Color color = null;
+        if ("black".equals(name)) {
+            color = Color.black;
+        } else if ("blue".equals(name)) {
+            color = Color.blue;
+        } else if ("cyan".equals(name)) {
+            color = Color.cyan;
+        } else if ("darkGray".equals(name)) {
+            color = Color.darkGray;
+        } else if ("gray".equals(name)) {
+            color = Color.gray;
+        } else if ("green".equals(name)) {
+            color = Color.green;
+        } else if ("lightGray".equals(name)) {
+            color = Color.lightGray;
+        } else if ("magenta".equals(name)) {
+            color = Color.magenta;
+        } else if ("orange".equals(name)) {
+            color = Color.orange;
+        } else if ("pink".equals(name)) {
+            color = Color.pink;
+        } else if ("red".equals(name)) {
+            color = Color.red;
+        } else if ("white".equals(name)) {
+            color = Color.white;
+        } else if ("yellow".equals(name)) {
+            color = Color.yellow;
+        }
+
+        if (color == null) {
+            return;
+        }
+        textAttribs.removeAttribute(StyleConstants.Foreground);
+        textAttribs.addAttribute(StyleConstants.Foreground, color);
+        setForeground(color);
+    }
+
+    /**
+     * Gets the font from an attribute set.  This is
+     * implemented to try and fetch a cached font
+     * for the given AttributeSet, and if that fails
+     * the font features are resolved and the
+     * font is fetched from the low-level font cache.
+     * Font's are cached in the StyleSheet of a document
+     *
+     * @param attr the attribute set
+     * @return the font
+     */
+    private Font getAttributeSetFont(AttributeSet attr) {
+        // PENDING(prinz) add cache behavior
+        int style = Font.PLAIN;
+        if (StyleConstants.isBold(attr)) {
+            style |= Font.BOLD;
+        }
+        if (StyleConstants.isItalic(attr)) {
+            style |= Font.ITALIC;
+        }
+        String family = StyleConstants.getFontFamily(attr);
+        int size = StyleConstants.getFontSize(attr);
+
+        /**
+         * if either superscript or subscript is
+         * is set, we need to reduce the font size
+         * by 2.
+         */
+        if (StyleConstants.isSuperscript(attr) ||
+                StyleConstants.isSubscript(attr)) {
+            size -= 2;
+        }
+
+        // fonts are cached in the StyleSheet so use that
+        return doc.getStyleSheet().getFont(family, style, size);
+    }
+
+    /**
+     * Displays the viewer according to the viewerType
+     */
+    public void actionPerformed(ActionEvent e) {
+        URL link;
+        try {
+            link = new URL(content);
+        } catch (MalformedURLException exc) {
+            //XXX log something to ide.log??
+            return;
+        }
+        HtmlBrowser.URLDisplayer.getDefault().showURL(link);
+    }
+
+    public String getURLExternalForm() {
+        return getContent();
+    }
+
+    public Clipboard getClipboard() {
+        return this.getToolkit().getSystemClipboard();
+    }
+
+    public void lostOwnership(Clipboard clipboard, Transferable contents) {
+        // do nothing
+    }
+
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/HelpCtxProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/HelpCtxProcessor.java b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpCtxProcessor.java
new file mode 100644
--- /dev/null	(date 1683618975159)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpCtxProcessor.java	(date 1683618975159)
@@ -0,0 +1,279 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import eu.esa.snap.netbeans.javahelp.api.Help;
+import org.openide.cookies.InstanceCookie;
+import org.openide.loaders.DataObject;
+import org.openide.loaders.Environment;
+import org.openide.nodes.Node;
+import org.openide.nodes.NodeEvent;
+import org.openide.nodes.NodeListener;
+import org.openide.nodes.NodeMemberEvent;
+import org.openide.nodes.NodeReorderEvent;
+import org.openide.util.HelpCtx;
+import org.openide.util.Lookup;
+import org.openide.util.RequestProcessor;
+import org.openide.util.WeakListeners;
+import org.openide.util.lookup.Lookups;
+import org.openide.xml.EntityCatalog;
+import org.openide.xml.XMLUtil;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+import org.xml.sax.InputSource;
+
+import javax.swing.AbstractAction;
+import javax.swing.Action;
+import javax.swing.ImageIcon;
+import javax.swing.event.ChangeEvent;
+import javax.swing.event.ChangeListener;
+import java.awt.EventQueue;
+import java.awt.Image;
+import java.awt.Toolkit;
+import java.awt.event.ActionEvent;
+import java.beans.BeanInfo;
+import java.beans.PropertyChangeEvent;
+import java.io.IOException;
+import java.util.logging.Level;
+
+/**
+ * XML processor for help context links.
+ * The associated instance makes it suitable for
+ * inclusion in a menu or toolbar.
+ *
+ * @author Jesse Glick
+ */
+public final class HelpCtxProcessor implements Environment.Provider {
+
+    private static Help findHelp() {
+        return Lookup.getDefault().lookup(Help.class);
+    }
+
+    public @Override Lookup getEnvironment(final DataObject obj) {
+        try {
+            Class.forName("javax.help.HelpSet");
+        } catch (ClassNotFoundException ex) {
+            //JavaHelp not available, ignore:
+            return Lookup.EMPTY;
+        }
+        Installer.log.log(Level.FINE, "creating help context presenter from {0}", obj.getPrimaryFile());
+        return Lookups.singleton(new InstanceCookie() {
+            private Action instance = null;
+
+            public @Override String instanceName() {
+                return obj.getName();
+            }
+
+            public @Override Class<?> instanceClass() throws IOException, ClassNotFoundException {
+                return Action.class;
+            }
+
+            public @Override
+            synchronized Object instanceCreate() throws IOException, ClassNotFoundException {
+                if (instance != null) {
+                    return instance;
+                }
+                try {
+                    Document doc = XMLUtil.parse(new InputSource(obj.getPrimaryFile().getURL().toString()), true, false, XMLUtil.defaultErrorHandler(), EntityCatalog.getDefault());
+                    Element el = doc.getDocumentElement();
+                    if (!el.getNodeName().equals("helpctx")) { // NOI18N
+                        throw new IOException();
+                    }
+                    instance = new ShortcutAction(obj, el.getAttribute("id"), Boolean.valueOf(el.getAttribute("showmaster")));
+                    if (obj.getPrimaryFile().getAttribute("iconBase") != null) { //NOI18N
+                        instance.putValue("iconBase", obj.getPrimaryFile().getAttribute("iconBase")); //NOI18N
+                    }
+                    return instance;
+                } catch (IOException x) {
+                    throw x;
+                } catch (Exception x) {
+                    throw new IOException(x);
+                }
+            }
+        });
+    }
+
+    /**
+     * The presenter to be shown in a menu, e.g.
+     */
+    private static final class ShortcutAction extends AbstractAction implements HelpCtx.Provider, NodeListener, ChangeListener {
+
+        private static final RequestProcessor RP =
+                new RequestProcessor(ShortcutAction.class);
+
+        /**
+         * associated XML file representing it
+         */
+        private final DataObject obj;
+
+        /**
+         * the cached help context
+         */
+        private String helpID;
+
+        /**
+         * cached flag to show the master help set
+         */
+        private boolean showmaster;
+
+        /**
+         * Create a new presenter.
+         *
+         * @param obj XML file describing it
+         */
+        public ShortcutAction(DataObject obj, String helpID, boolean showmaster) {
+            this.obj = obj;
+            this.helpID = helpID;
+            this.showmaster = showmaster;
+            putValue("noIconInMenu", true); // NOI18N
+            Installer.log.log(Level.FINE, "new ShortcutAction: {0} {1} showmaster={2}", new Object[]{obj, helpID, showmaster});
+            updateText();
+            updateIcon();
+            updateEnabled();
+            if (obj.isValid()) {
+                Node n = obj.getNodeDelegate();
+                n.addNodeListener(org.openide.nodes.NodeOp.weakNodeListener(this, n));
+            }
+            Help h = findHelp();
+            if (h != null) {
+                h.addChangeListener(WeakListeners.change(this, h));
+            }
+        }
+
+        /**
+         * Show the help.
+         *
+         * @param actionEvent ignored
+         */
+        public @Override void actionPerformed(ActionEvent actionEvent) {
+            Help h = findHelp();
+            if (h != null) {
+                Installer.log.log(Level.FINE, "ShortcutAction.actionPerformed: {0} showmaster={1}", new Object[]{helpID, showmaster});
+                h.showHelp(new HelpCtx(helpID), showmaster);
+            } else {
+                Toolkit.getDefaultToolkit().beep();
+            }
+        }
+
+        /**
+         * Help for the shortcut itself is generic.
+         *
+         * @return a neutral help context - welcome page
+         */
+        public @Override HelpCtx getHelpCtx() {
+            // #23565:
+            return new HelpCtx("ide.welcome"); // NOI18N
+        }
+
+        /**
+         * Help sets may have changed.
+         *
+         * @param e ignored
+         */
+        public @Override void stateChanged(ChangeEvent e) {
+            updateEnabled();
+        }
+
+        /**
+         * Called when the node delegate changes somehow,
+         *
+         * @param ev event indicating whether the change
+         *           was of display name, icon, or other
+         */
+        public @Override void propertyChange(PropertyChangeEvent ev) {
+            String prop = ev.getPropertyName();
+            if (!obj.isValid()) {
+                return;
+            }
+            if (prop == null || prop.equals(Node.PROP_NAME) || prop.equals(Node.PROP_DISPLAY_NAME)) {
+                updateText();
+            }
+            if (prop == null || prop.equals(Node.PROP_ICON)) {
+                updateIcon();
+            }
+        }
+
+        /**
+         * Update the text of the button according to node's
+         * display name. Handle mnemonics sanely.
+         */
+        private void updateText() {
+            String text;
+            if (obj.isValid()) {
+                text = obj.getNodeDelegate().getDisplayName();
+            } else {
+                // #16364
+                text = "dead"; // NOI18N
+            }
+            putValue(Action.NAME, text);
+        }
+
+        /**
+         * Update the icon of the button according to the
+         * node delegate.
+         */
+        private void updateIcon() {
+            if (obj.isValid()) {
+                Image icon = obj.getNodeDelegate().getIcon(BeanInfo.ICON_COLOR_16x16);
+                if (icon != null) {
+                    putValue(Action.SMALL_ICON, new ImageIcon(icon));
+                }
+            }
+        }
+
+        private void updateEnabled() {
+            RP.post(new Runnable() {
+                @Override
+                public void run() {
+                    Help h = findHelp();
+                    final Boolean valid = h == null
+                            ? Boolean.FALSE : h.isValidID(helpID, false);
+                    if (valid != null) {
+                        EventQueue.invokeLater(new Runnable() {
+                            @Override
+                            public void run() {
+                                setEnabled(valid.booleanValue());
+                            }
+                        });
+                    }
+                    Installer.log.log(Level.FINE,
+                            "enabled: xml={0} id={1} enabled={2}", //NOI18N
+                            new Object[]{obj.getPrimaryFile(), helpID, valid});
+                }
+            });
+        }
+
+        public @Override void nodeDestroyed(NodeEvent ev) {
+            setEnabled(false);
+            updateText();
+        }
+
+        public @Override void childrenAdded(NodeMemberEvent ev) {
+        }
+
+        public @Override void childrenRemoved(NodeMemberEvent ev) {
+        }
+
+        public @Override void childrenReordered(NodeReorderEvent ev) {
+        }
+
+    }
+
+}
Index: target/classes/META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/META-INF/MANIFEST.MF b/target/classes/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(date 1683622265723)
+++ b/target/classes/META-INF/MANIFEST.MF	(date 1683622265723)
@@ -0,0 +1,33 @@
+Manifest-Version: 1.0
+AutoUpdate-Show-In-Client: false
+AutoUpdate-Essential-Module: true
+OpenIDE-Module-Java-Dependencies: Java > 11
+OpenIDE-Module-Layer: eu/esa/snap/netbeans/javahelp/resources/layer.xm
+ l
+OpenIDE-Module-Install: eu/esa/snap/netbeans/javahelp/Installer.class
+OpenIDE-Module-Long-Description: <p>Provides the software user manual.
+ </p><p><b>Vendor:</b> Brockmann Consult GmbH</p><p><b>Contact address
+ :</b> Chrysanderstr. 1, 21029 Hamburg (Germany)</p><p><b>Copyright:</
+ b> (C) 2014 by Brockmann Consult GmbH</p><p><b>Vendor:</b> Brockmann 
+ Consult GmbH</p><p><b>License:</b> http://www.gnu.org/licenses/gpl.ht
+ ml</p>
+OpenIDE-Module-Specification-Version: 1.0.0
+OpenIDE-Module-Implementation-Version: 1.0.0
+OpenIDE-Module-Build-Version: 202305090851
+OpenIDE-Module: eu.esa.snap.netbeans.snap.help.system
+OpenIDE-Module-Public-Packages: eu.esa.snap.netbeans.javahelp.api.**
+OpenIDE-Module-Requires: org.openide.modules.ModuleFormat1
+OpenIDE-Module-Display-Category: eu.esa.snap.netbeans
+OpenIDE-Module-Name: SNAP-NetBeans Help System
+OpenIDE-Module-Short-Description: The SNAP help system based on NetBea
+ ns
+X-Class-Path: ext/eu.esa.snap.netbeans.snap-help-system/javax-help/jav
+ ahelp.jar
+Maven-Class-Path: javax.help:javahelp:2.0.05
+OpenIDE-Module-Module-Dependencies: org.openide.awt > 7.75, org.openid
+ e.filesystems > 9.17, org.openide.loaders > 7.74, org.openide.modules
+  > 7.55, org.openide.windows > 6.84, org.openide.util.ui > 9.15, org.
+ openide.util > 9.14, org.openide.util.lookup > 8.40, org.openide.node
+ s > 7.52, org.netbeans.api.progress/1 > 1.54, org.netbeans.api.progre
+ ss.nb > 1.54, org.netbeans.spi.quicksearch > 1.34
+
Index: src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetProcessor.java b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetProcessor.java
new file mode 100644
--- /dev/null	(date 1683618975136)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetProcessor.java	(date 1683618975136)
@@ -0,0 +1,103 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import org.openide.cookies.InstanceCookie;
+import org.openide.loaders.DataObject;
+import org.openide.loaders.Environment;
+import org.openide.util.Lookup;
+import org.openide.util.lookup.Lookups;
+import org.openide.xml.EntityCatalog;
+import org.openide.xml.XMLUtil;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+import org.xml.sax.InputSource;
+
+import javax.help.HelpSet;
+import java.io.IOException;
+import java.net.URL;
+import java.util.logging.Level;
+
+/**
+ * An XML processor for help set references.
+ * Provides an instance of javax.swing.HelpSet.
+ *
+ * @author Jesse Glick
+ */
+public final class HelpSetProcessor implements Environment.Provider {
+
+    /**
+     * "context" for merge attribute on helpsets
+     */
+    private static final String HELPSET_MERGE_CONTEXT = "OpenIDE"; // NOI18N
+
+    /**
+     * attribute (type Boolean) on helpsets indicating
+     * whether they should be merged into the master or
+     * not; by default, true
+     */
+    private static final String HELPSET_MERGE_ATTR = "mergeIntoMaster"; // NOI18N
+
+    public @Override Lookup getEnvironment(final DataObject obj) {
+        try {
+            Class.forName("javax.help.HelpSet");
+        } catch (ClassNotFoundException ex) {
+            //JavaHelp not available, ignore:
+            return Lookup.EMPTY;
+        }
+        Installer.log.log(Level.FINE, "creating help set from ref: {0}", obj.getPrimaryFile());
+        return Lookups.singleton(new InstanceCookie() {
+            public @Override String instanceName() {
+                return obj.getName();
+            }
+
+            public @Override Class<?> instanceClass() throws IOException, ClassNotFoundException {
+                return HelpSet.class;
+            }
+
+            public @Override Object instanceCreate() throws IOException, ClassNotFoundException {
+                try {
+                    Document doc = XMLUtil.parse(new InputSource(obj.getPrimaryFile().getURL().toString()), true, false, XMLUtil.defaultErrorHandler(), EntityCatalog.getDefault());
+                    Element el = doc.getDocumentElement();
+                    if (!el.getNodeName().equals("helpsetref")) { // NOI18N
+                        throw new IOException();
+                    }
+                    String url = el.getAttribute("url"); // NOI18N
+                    if (url == null || url.isEmpty()) {
+                        throw new IOException("no url attr on <helpsetref>! doc.class=" + doc.getClass().getName() + " doc.documentElement=" + el);
+                    }
+                    String mergeS = el.getAttribute("merge"); // NOI18N
+                    boolean merge = mergeS.isEmpty() || Boolean.valueOf(mergeS);
+                    // Make sure nbdocs: protocol is ready:
+                    Object ignore = NbDocsStreamHandler.class; // DO NOT DELETE THIS LINE
+                    HelpSet hs = new HelpSet(Lookup.getDefault().lookup(ClassLoader.class), new URL(url));
+                    hs.setKeyData(HELPSET_MERGE_CONTEXT, HELPSET_MERGE_ATTR, merge);
+                    return hs;
+                } catch (IOException x) {
+                    throw x;
+                } catch (Exception x) {
+                    throw new IOException(x);
+                }
+            }
+        });
+    }
+
+}
+
Index: src/main/java/eu/esa/snap/netbeans/javahelp/NbDocsStreamHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/NbDocsStreamHandler.java b/src/main/java/eu/esa/snap/netbeans/javahelp/NbDocsStreamHandler.java
new file mode 100644
--- /dev/null	(date 1683620623696)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/NbDocsStreamHandler.java	(date 1683620623696)
@@ -0,0 +1,429 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import org.openide.modules.InstalledFileLocator;
+import org.openide.modules.ModuleInfo;
+import org.openide.util.Exceptions;
+import org.openide.util.Lookup;
+import org.openide.util.NbBundle;
+import org.openide.util.URLStreamHandlerRegistration;
+import org.openide.util.Utilities;
+
+import java.io.ByteArrayInputStream;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.InetAddress;
+import java.net.URL;
+import java.net.URLConnection;
+import java.net.URLStreamHandler;
+import java.util.MissingResourceException;
+
+/**
+ * Handler & connection cribbed from NbResourceStreamHandler.
+ *
+ * @author Jesse Glick
+ */
+@URLStreamHandlerRegistration(protocol = "nbdocs")
+public final class NbDocsStreamHandler extends URLStreamHandler {
+
+    /**
+     * Make a URLConnection for nbdocs: URLs.
+     *
+     * @param u the URL
+     * @return the connection
+     * @throws IOException if the wrong protocol
+     */
+    protected URLConnection openConnection(URL u) throws IOException {
+        if (u.getProtocol().equals("nbdocs")) { // NOI18N
+            return new NbDocsURLConnection(u);
+        } else {
+            throw new IOException("mismatched protocol"); // NOI18N
+        }
+    }
+
+    @Override
+    protected synchronized InetAddress getHostAddress(URL u) {
+        if (u.getProtocol().equals("nbdocs")) { // NOI18N
+            return null;
+        } else {
+            return super.getHostAddress(u);
+        }
+    }
+
+    /**
+     * A URL connection that reads from the docs classloader.
+     */
+    private static final class NbDocsURLConnection extends URLConnection {
+
+        /**
+         * underlying URL connection
+         */
+        private URLConnection real = null;
+
+        /**
+         * any associated exception while handling
+         */
+        private IOException exception = null;
+
+        /**
+         * Make the connection.
+         *
+         * @param u URL to connect to
+         */
+        public NbDocsURLConnection(URL u) {
+            super(u);
+        }
+
+        /**
+         * Searches for module with given code name.
+         *
+         * @param codeNameBase unique string base name of the module
+         *                     (without release number)
+         * @return module info of found module or null if module is not found
+         * (not installed).
+         * @deprecated will be replaced by similar method in Modules Open APIs in
+         * future releases
+         */
+        private static ModuleInfo findModule(String codeNameBase) {
+            Lookup.Result<ModuleInfo> modulesResult =
+                    Lookup.getDefault().lookup(new Lookup.Template<ModuleInfo>(ModuleInfo.class));
+            for (ModuleInfo curInfo : modulesResult.allInstances()) {
+                if (curInfo.getCodeNameBase().equals(codeNameBase)) {
+                    return curInfo;
+                }
+            }
+            return null;
+        }
+
+        /**
+         * Connect to the URL.
+         * Actually look up and open the underlying connection.
+         *
+         * @throws IOException for the usual reasons
+         */
+        public synchronized void connect() throws IOException {
+            if (exception != null) {
+                IOException e = exception;
+                exception = null;
+                throw e;
+            }
+            if (!connected) {
+                String host = url.getHost();
+                if (host.length() > 0) {
+                    ModuleInfo moduleInfo = findModule(host);
+                    if (moduleInfo != null) {
+                        if (!moduleInfo.isEnabled()) {
+                            URL info = new URL("nbdocs:/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html"); // NOI18N
+                            String moduleName = moduleInfo.getDisplayName();
+                            real = new InfoURLConnection(info, moduleName);
+                            real.connect();
+                            connected = true;
+                            return;
+                        }
+                    } else {
+                        URL info = new URL("nbdocs:/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html"); // NOI18N
+                        String moduleName = ""; // NOI18N
+                        try {
+                            moduleName = NbBundle.getMessage(NbDocsStreamHandler.class, host);
+                        } catch (MissingResourceException exc) {
+                            moduleName = host;
+                        }
+                        real = new InfoURLConnection(info, moduleName);
+                        real.connect();
+                        connected = true;
+                        return;
+                    }
+                }
+                String resource = url.getFile();
+                if (resource.startsWith("/")) resource = resource.substring(1); //NOI18N
+                URL target;
+                String ext, basename;
+                int index = resource.lastIndexOf('.');
+                if (index != -1 && index > resource.lastIndexOf('/')) {
+                    ext = resource.substring(index + 1);
+                    basename = resource.substring(0, index).replace('/', '.');
+                } else {
+                    ext = null;
+                    basename = resource.replace('/', '.');
+                }
+                try {
+                    target = NbBundle.getLocalizedFile(basename, ext);
+                } catch (MissingResourceException mre) {
+                    // OK, try file.
+                    if (host.isEmpty() && resource.equals("org/netbeans/modules/usersguide/ide.css")) { // NOI18N
+                        host = "org.netbeans.modules.usersguide"; // well-known resource referenced w/o host field by many files
+                    }
+                    File f = InstalledFileLocator.getDefault().locate("docs/" + resource, host.isEmpty() ? null : host, true); // NOI18N
+                    if (f != null) {
+                        target = Utilities.toURI(f).toURL();
+                    } else {
+                        IOException ioe = new IOException("cannot connect to " + url + ": " + mre);
+                        ioe.initCause(mre);
+                        Exceptions.attachLocalizedMessage(ioe,
+                                NbBundle.getMessage(NbDocsStreamHandler.class,
+                                        "EXC_nbdocs_cannot_connect",
+                                        url));
+                        throw ioe;
+                    }
+                }
+                //System.err.println("loading from " + target);
+                real = target.openConnection();
+                real.connect();
+                connected = true;
+            }
+        }
+
+        /**
+         * Maybe connect, if not keep track of the problem.
+         */
+        private void tryToConnect() {
+            if (connected || exception != null) return;
+            try {
+                connect();
+            } catch (IOException ioe) {
+                exception = ioe;
+            }
+        }
+
+        /**
+         * Get a URL header.
+         *
+         * @param n index of the header
+         * @return the header value
+         */
+        public String getHeaderField(int n) {
+            tryToConnect();
+            if (connected)
+                return real.getHeaderField(n);
+            else
+                return null;
+        }
+
+        /**
+         * Get the name of a header.
+         *
+         * @param n the index
+         * @return the header name
+         */
+        public String getHeaderFieldKey(int n) {
+            tryToConnect();
+            if (connected)
+                return real.getHeaderFieldKey(n);
+            else
+                return null;
+        }
+
+        /**
+         * Get a header by name.
+         *
+         * @param key the header name
+         * @return the value
+         */
+        public String getHeaderField(String key) {
+            tryToConnect();
+            if (connected)
+                return real.getHeaderField(key);
+            else
+                return null;
+        }
+
+        /**
+         * Get an input stream on the connection.
+         *
+         * @return a stream to the object
+         * @throws IOException for the usual reasons
+         */
+        public InputStream getInputStream() throws IOException {
+            connect();
+            return real.getInputStream();
+        }
+
+        /**
+         * Get an output stream on the object.
+         *
+         * @return an output stream writing to it
+         * @throws IOException for the usual reasons
+         */
+        public OutputStream getOutputStream() throws IOException {
+            connect();
+            return real.getOutputStream();
+        }
+
+        /**
+         * Get the type of the content.
+         *
+         * @return the MIME type
+         */
+        public String getContentType() {
+            tryToConnect();
+            if (connected)
+                return real.getContentType();
+            else
+                return "application/octet-stream"; // NOI18N
+        }
+
+        /**
+         * Get the length of content.
+         *
+         * @return the length in bytes
+         */
+        public int getContentLength() {
+            tryToConnect();
+            if (connected)
+                return real.getContentLength();
+            else
+                return 0;
+        }
+
+    }
+
+    /**
+     * A URL connection that reads from the info files. It displays
+     * help page when referred module is not enabled or installed.
+     * It also takes module display name from bundle when available.
+     * Module base name is key to retrieve module display name
+     * eg.: org.netbeans.modules.web.monitor=HTTP Monitor
+     */
+    private static final class InfoURLConnection extends URLConnection {
+        /**
+         * Provides input stream for this connection.
+         */
+        private ByteArrayInputStream stream;
+        /**
+         * Module display name
+         */
+        private String moduleName;
+
+        /**
+         * Make the connection.
+         *
+         * @param u URL to connect to
+         */
+        public InfoURLConnection(URL u, String moduleName) {
+            super(u);
+            this.moduleName = moduleName;
+        }
+
+        /**
+         * Connect to the URL.
+         * Actually look up and open the underlying connection.
+         *
+         * @throws IOException for the usual reasons
+         */
+        public synchronized void connect() throws IOException {
+            if (!connected) {
+                //Prepare data
+                InputStream is = url.openStream();
+                if (is != null) {
+                    byte[] arr;
+                    arr = readData(is);
+                    String s1 = new String(arr, "UTF-8"); // NOI18N
+                    String s2 = s1.replaceAll("\\{0\\}", moduleName); // NOI18N
+                    arr = s2.getBytes("UTF-8");
+                    stream = new ByteArrayInputStream(arr);
+                } else {
+                    throw new IOException("Info file not found."); // NOI18N
+                }
+                connected = true;
+            }
+        }
+
+        /**
+         * Reads all available data from input steram to byte array. It is workaround
+         * to avoid usage of InputStream.available which might be unreliable on URL.
+         */
+        private byte[] readData(InputStream is) throws IOException {
+            int step = 4096;
+            byte[] buff = new byte[step];
+            byte[] sum = new byte[0];
+            byte[] result;
+            int len = -1, readLen = 0, allocLen = 0;
+
+            for (; ; ) {
+                len = is.read(buff);
+                if (len == -1) {
+                    result = new byte[readLen];
+                    System.arraycopy(sum, 0, result, 0, readLen);
+                    return result;
+                }
+                if (allocLen < (readLen + len)) {
+                    byte[] tmp = new byte[sum.length];
+                    System.arraycopy(sum, 0, tmp, 0, readLen);
+                    sum = new byte[allocLen + step];
+                    allocLen = allocLen + step;
+                    System.arraycopy(tmp, 0, sum, 0, readLen);
+                }
+                System.arraycopy(buff, 0, sum, readLen, len);
+                readLen = readLen + len;
+            }
+        }
+
+        /**
+         * Maybe connect, if not keep track of the problem.
+         */
+        private void tryToConnect() {
+            if (connected) {
+                return;
+            }
+            try {
+                connect();
+            } catch (IOException ioe) {
+            }
+        }
+
+        /**
+         * Get an input stream on the connection.
+         *
+         * @return a stream to the object
+         * @throws IOException for the usual reasons
+         */
+        public InputStream getInputStream() throws IOException {
+            connect();
+            return stream;
+        }
+
+
+        /**
+         * Get the type of the content.
+         *
+         * @return the MIME type
+         */
+        public String getContentType() {
+            return "text/html"; // NOI18N
+        }
+
+        /**
+         * Get the length of content.
+         *
+         * @return the length in bytes
+         */
+        public int getContentLength() {
+            tryToConnect();
+            if (connected) {
+                return stream.available();
+            } else {
+                return 0;
+            }
+        }
+    }
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/CopyLinkLocationAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/CopyLinkLocationAction.java b/src/main/java/eu/esa/snap/netbeans/javahelp/CopyLinkLocationAction.java
new file mode 100644
--- /dev/null	(date 1683618975172)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/CopyLinkLocationAction.java	(date 1683618975172)
@@ -0,0 +1,66 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import org.openide.util.NbBundle;
+
+import javax.swing.AbstractAction;
+import java.awt.datatransfer.Clipboard;
+import java.awt.datatransfer.ClipboardOwner;
+import java.awt.datatransfer.StringSelection;
+import java.awt.event.ActionEvent;
+
+/**
+ * The <code>CopyLinkLocationAction</code>.
+ *
+ * @author Victor G. Vasilyev
+ */
+public class CopyLinkLocationAction extends AbstractAction {
+
+    private static final String LBL_CopyLinkLocationAction =
+            NbBundle.getMessage(HyperlinkEventProcessor.class,
+                    "LBL_CopyLinkLocationAction");
+
+    private LinkOwner linkOwner;
+
+    public CopyLinkLocationAction(LinkOwner link) {
+        super(LBL_CopyLinkLocationAction);
+        // putValue(SHORT_DESCRIPTION, desc);
+        // putValue(MNEMONIC_KEY, mnemonic);
+        this.linkOwner = link;
+    }
+
+    public void actionPerformed(ActionEvent e) {
+        textToSystemClipboard(linkOwner.getURLExternalForm());
+    }
+
+    private void textToSystemClipboard(String text) {
+        StringSelection selection = new StringSelection(text);
+        Clipboard clipboard = linkOwner.getClipboard();
+        clipboard.setContents(selection, linkOwner);
+    }
+
+    public interface LinkOwner extends ClipboardOwner {
+        String getURLExternalForm();
+
+        Clipboard getClipboard();
+    }
+
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/HyperlinkEventProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/HyperlinkEventProcessor.java b/src/main/java/eu/esa/snap/netbeans/javahelp/HyperlinkEventProcessor.java
new file mode 100644
--- /dev/null	(date 1683618975157)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/HyperlinkEventProcessor.java	(date 1683618975157)
@@ -0,0 +1,123 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import javax.swing.JEditorPane;
+import javax.swing.JMenuItem;
+import javax.swing.JPopupMenu;
+import javax.swing.event.HyperlinkEvent;
+import javax.swing.event.HyperlinkListener;
+import java.awt.datatransfer.Clipboard;
+import java.awt.datatransfer.Transferable;
+import java.awt.event.MouseAdapter;
+import java.awt.event.MouseEvent;
+import java.net.URL;
+import java.util.logging.Level;
+
+/**
+ * Processor for the both {@code MouseEvent}s and
+ * {@code HyperlinkEvent}s that may occur against hyperlinks
+ * displayed in the {@code JEditorPane}.
+ * The {@code HyperlinkEventProcessor} is responsible to:
+ * <ul>
+ *     <li>show a {@code url} of the hyperlink as a tooltip;</li>
+ *     <li>show a context menu of the hyperlink</li>
+ *     <li>copy text of the {@code url} to the system clipboard</li>
+ * </ul>
+ *
+ * <p>Usage:<br/>
+ * {@code HyperlinkEventProcessor.addTo(pane);}
+ * </p>
+ *
+ * @author Victor G. Vasilyev
+ */
+public class HyperlinkEventProcessor extends MouseAdapter
+        implements HyperlinkListener, CopyLinkLocationAction.LinkOwner {
+
+    private boolean isInsideHyperlink = false;
+    private URL url;
+    private JEditorPane pane;
+    private JPopupMenu popupMenu;
+
+    // Use addTo(JEditorPane pane) instead.
+    private HyperlinkEventProcessor(JEditorPane pane) {
+        this.pane = pane;
+        this.popupMenu = getPopupMenu(new CopyLinkLocationAction(this));
+    }
+
+    static JPopupMenu getPopupMenu(CopyLinkLocationAction cllAction) {
+        JMenuItem copyItem = new JMenuItem(cllAction);
+        JPopupMenu menu = new JPopupMenu();
+        menu.add(copyItem);
+        return menu;
+    }
+
+    /**
+     * Adds the {@code HyperlinkEventProcessor} to the specified
+     * {@code JEditorPane}.
+     *
+     * @param pane an instance of the {@code JEditorPane}.
+     */
+    public static void addTo(JEditorPane pane) {
+        assert pane != null;
+        HyperlinkEventProcessor proc = new HyperlinkEventProcessor(pane);
+        pane.addHyperlinkListener(proc);
+        pane.addMouseListener(proc);
+    }
+
+    public void hyperlinkUpdate(HyperlinkEvent hyperlinkEvent) {
+        url = hyperlinkEvent.getURL();
+        HyperlinkEvent.EventType type = hyperlinkEvent.getEventType();
+        if (type == HyperlinkEvent.EventType.ENTERED) {
+            isInsideHyperlink = true;
+            pane.setToolTipText(getURLExternalForm()); // #176141
+        } else if (type == HyperlinkEvent.EventType.ACTIVATED) {
+            isInsideHyperlink = false;
+            pane.setToolTipText(null);
+        } else if (type == HyperlinkEvent.EventType.EXITED) {
+            isInsideHyperlink = false;
+            pane.setToolTipText(null);
+        } else {
+            Installer.log.log(Level.SEVERE, "Unknown hyperlinkEvent: " +
+                    hyperlinkEvent);
+        }
+    }
+
+    @Override
+    public void mouseClicked(MouseEvent e) {
+        if (isInsideHyperlink && Utils.isMouseRightClick(e)) {
+            Utils.showPopupMenu(e, popupMenu, pane);
+        }
+    }
+
+    public void lostOwnership(Clipboard clipboard, Transferable contents) {
+        // do nothing
+    }
+
+    public String getURLExternalForm() {
+        return url == null ? null : url.toExternalForm(); // #176141
+    }
+
+    public Clipboard getClipboard() {
+        return pane.getToolkit().getSystemClipboard();
+    }
+
+}
+
Index: target/maven-archiver/pom.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/target/maven-archiver/pom.properties b/target/maven-archiver/pom.properties
new file mode 100644
--- /dev/null	(date 1683622266107)
+++ b/target/maven-archiver/pom.properties	(date 1683622266107)
@@ -0,0 +1,3 @@
+artifactId=snap-help-system
+groupId=eu.esa.snap.netbeans
+version=1.0.0
Index: src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayerBeanInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayerBeanInfo.java b/src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayerBeanInfo.java
new file mode 100644
--- /dev/null	(date 1683618975170)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayerBeanInfo.java	(date 1683618975170)
@@ -0,0 +1,52 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import java.beans.PropertyDescriptor;
+import java.beans.SimpleBeanInfo;
+
+/**
+ * This class provides information about getter/setter methods within
+ * BrowserDisplayer. It is usefull for reflection.
+ *
+ * @author Marek Slama
+ * @see BrowserDisplayer
+ */
+public class BrowserDisplayerBeanInfo extends SimpleBeanInfo {
+
+    public BrowserDisplayerBeanInfo() {
+    }
+
+    public PropertyDescriptor[] getPropertyDescriptors() {
+        PropertyDescriptor back[] = new PropertyDescriptor[7];
+        try {
+            back[0] = new PropertyDescriptor("content", BrowserDisplayer.class);
+            back[1] = new PropertyDescriptor("text", BrowserDisplayer.class);
+            back[2] = new PropertyDescriptor("textFontFamily", BrowserDisplayer.class);
+            back[3] = new PropertyDescriptor("textFontSize", BrowserDisplayer.class);
+            back[4] = new PropertyDescriptor("textFontWeight", BrowserDisplayer.class);
+            back[5] = new PropertyDescriptor("textFontStyle", BrowserDisplayer.class);
+            back[6] = new PropertyDescriptor("textColor", BrowserDisplayer.class);
+            return back;
+        } catch (Exception ex) {
+            return null;
+        }
+    }
+}
Index: src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetRegistrationProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetRegistrationProcessor.java b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetRegistrationProcessor.java
new file mode 100644
--- /dev/null	(date 1683618975143)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetRegistrationProcessor.java	(date 1683618975143)
@@ -0,0 +1,277 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp;
+
+import com.sun.java.help.search.Indexer;
+import eu.esa.snap.netbeans.javahelp.api.HelpSetRegistration;
+import org.openide.filesystems.FileUtil;
+import org.openide.filesystems.annotations.LayerBuilder;
+import org.openide.filesystems.annotations.LayerGeneratingProcessor;
+import org.openide.filesystems.annotations.LayerGenerationException;
+import org.openide.util.Utilities;
+import org.openide.util.lookup.ServiceProvider;
+import org.openide.xml.XMLUtil;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+import org.xml.sax.EntityResolver;
+import org.xml.sax.InputSource;
+import org.xml.sax.SAXException;
+
+import javax.annotation.processing.Processor;
+import javax.annotation.processing.RoundEnvironment;
+import javax.lang.model.element.PackageElement;
+import javax.lang.model.element.TypeElement;
+import javax.tools.Diagnostic.Kind;
+import javax.tools.FileObject;
+import javax.tools.StandardLocation;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.PrintWriter;
+import java.net.MalformedURLException;
+import java.net.URI;
+import java.net.URL;
+import java.net.URLDecoder;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
+import java.util.concurrent.atomic.AtomicInteger;
+
+@ServiceProvider(service = Processor.class)
+public class HelpSetRegistrationProcessor extends LayerGeneratingProcessor {
+
+    /**
+     * Create a temp file that can be used for turning into directory
+     * and setting as database directory for indexing JavaHelp files.
+     * <p>
+     * This method was created because default temp directory on some systems
+     * (Mac) contains plus sign "+" in its path. Plus signs are replaced with
+     * spaces in JavaHelp indexer because of encoding path to URL and later
+     * decoding URL back to path.
+     * <p>
+     * #201194
+     * <p>
+     * This is workaround only. Fixed upstream, see
+     * http://java.net/jira/browse/JAVAHELP-33.
+     * When a new version of JavaHelp with that fix is released (e.g. 2.0_06)
+     * and bundled in NetBeans, standard File.createTempFile can be used instead
+     * of this method, and createTempFile, replaceTempFile and isUrlCompatible
+     * methods can be removed.
+     */
+    static File createTempFile(String pref, String suff) throws IOException {
+
+        File f = File.createTempFile(pref, suff); //file in default tmp folder
+        if (!isUrlCompatible(f)) {
+            if (Utilities.isWindows()) {
+                f = replaceTempFile(f, "c:\\Temp", pref, suff);         //NOI18N
+            } else if (Utilities.isUnix()) {
+                f = replaceTempFile(f, "/tmp", pref, suff);             //NOI18N
+            }
+        }
+        return f;
+    }
+
+    /**
+     * Try to replace invalid temp file with a better one.
+     * On success, original temp file is deleted and newly found one is
+     * returned. Otherwise, original temp file is returned.
+     */
+    private static File replaceTempFile(File origTmpFile, String tmpDirPath,
+                                        String pref, String suff) {
+
+        File tmpDir = new File(tmpDirPath);
+        if (tmpDir.isDirectory()) {
+            File tmpFile;
+            int num = 0;
+            do {
+                String fileName = pref + System.currentTimeMillis()
+                        + "_" + (++num) + suff;                         //NOI18N
+                tmpFile = new File(tmpDir, fileName);
+            } while (tmpFile.exists()); // file to create cannot already exist
+            try {
+                tmpFile.createNewFile();
+            } catch (Exception e) {
+                return origTmpFile;
+            }
+            if (tmpFile.isFile() && isUrlCompatible(tmpFile)) {
+                origTmpFile.delete();
+                return tmpFile;
+            } else {
+                tmpFile.delete();
+                return origTmpFile;
+            }
+        } else {
+            return origTmpFile;
+        }
+    }
+
+    /**
+     * Test that file path is preserved if it is encoded to to URL and
+     * decoded back to path.
+     * <p>
+     * This happens internally in the JavaHelp Indexer and it can damage paths
+     * that contain special characters (e.g. plus sign "+").
+     */
+    static boolean isUrlCompatible(File f) {
+
+        URL baseURL;
+        try {
+            baseURL = new URL("file", "", f.getAbsolutePath());         //NOI18N
+        } catch (MalformedURLException ex) {
+            return false;
+        }
+        String fileFromUrl = baseURL.getFile();
+        String decodedFileFromUrl = URLDecoder.decode(fileFromUrl);
+        return f.getAbsolutePath().equals(decodedFileFromUrl);
+    }
+
+    private static void scan(File d, PrintWriter pw, AtomicInteger cnt, Set<String> excludes, String path) {
+        for (File f : d.listFiles()) {
+            String name = f.getName();
+            if (f.isDirectory()) {
+                scan(f, pw, cnt, excludes, path + name + '/');
+            } else if (!excludes.contains(path + name) && name.matches(".+[.]html?$")) {
+                pw.println("File " + f);
+                cnt.incrementAndGet();
+            }
+        }
+    }
+
+    public @Override Set<String> getSupportedAnnotationTypes() {
+        return Collections.singleton(HelpSetRegistration.class.getCanonicalName());
+    }
+
+    protected @Override boolean handleProcess(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) throws LayerGenerationException {
+        if (roundEnv.processingOver()) {
+            return false;
+        }
+        for (javax.lang.model.element.Element e : roundEnv.getElementsAnnotatedWith(HelpSetRegistration.class)) {
+            HelpSetRegistration r = e.getAnnotation(HelpSetRegistration.class);
+            String pkg = ((PackageElement) e).getQualifiedName().toString();
+            String hs = pkg.replace('.', '/') + '/' + r.helpSet();
+            LayerBuilder builder = layer(e);
+            builder.file("Services/JavaHelp/" + pkg.replace('.', '-') + ".xml").contents(""
+                    + "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
+                    + "<!DOCTYPE helpsetref PUBLIC \"-//NetBeans//DTD JavaHelp Help Set Reference 1.0//EN\" \"http://www.netbeans.org/dtds/helpsetref-1_0.dtd\">\n"
+                    + "<helpsetref url=\"nbdocs:/" + hs + "\" merge=\"" + r.merge() + "\"/>\n"
+            ).position(r.position()).write();
+
+            Document doc;
+            URI loc;
+            try {
+                loc = builder.validateResource(hs, e, r, "helpSet", false).toUri();
+                if (loc.getScheme() == null) {
+                    // JDK #6419926: FileObject.toUri() generates URI without schema
+                    loc = Utilities.toURI(new File(loc.toString()));
+                }
+                doc = XMLUtil.parse(new InputSource(loc.toString()), true, false, XMLUtil.defaultErrorHandler(), new EntityResolver() {
+                    public @Override InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {
+                        if (publicId.equals("-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 1.0//EN")) {
+                            return new InputSource(HelpSetRegistrationProcessor.class.getResource("resources/helpset_1_0.dtd").toString());
+                        } else if (publicId.equals("-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 2.0//EN")) {
+                            return new InputSource(HelpSetRegistrationProcessor.class.getResource("resources/helpset_2_0.dtd").toString());
+                        } else {
+                            return null;
+                        }
+                    }
+                });
+            } catch (IOException x) {
+                throw new LayerGenerationException("Could not parse " + hs + ": " + x, e, processingEnv, r, "helpSet");
+            } catch (SAXException x) {
+                throw new LayerGenerationException("Could not parse " + hs + ": " + x, e, processingEnv, r, "helpSet");
+            }
+            String searchDir = null;
+            for (Element view : XMLUtil.findSubElements(doc.getDocumentElement())) {
+                if (!view.getTagName().equals("view")) {
+                    continue;
+                }
+                Element type = XMLUtil.findElement(view, "type", null);
+                if ("javax.help.SearchView".equals(XMLUtil.findText(type))) {
+                    Element data = XMLUtil.findElement(view, "data", null);
+                    if (data.getAttribute("engine").equals("com.sun.java.help.search.DefaultSearchEngine")) {
+                        searchDir = XMLUtil.findText(data)/* XXX better to set XML parser to ignore ws */.trim();
+                        break;
+                    }
+                }
+            }
+            if (searchDir != null) {
+                if ("file".equals(loc.getScheme())) {
+                    File d = Utilities.toFile(loc).getParentFile();
+                    String out = hs.replaceFirst("/[^/]+$", "/") + searchDir + "/";
+                    try {
+                        File config = File.createTempFile("jhindexer-config", ".txt");
+                        try {
+                            AtomicInteger cnt = new AtomicInteger();
+                            OutputStream os = new FileOutputStream(config);
+                            try {
+                                PrintWriter pw = new PrintWriter(os);
+                                pw.println("IndexRemove " + d + File.separator);
+                                scan(d, pw, cnt, new HashSet<String>(Arrays.asList(r.excludes())), "");
+                                pw.flush();
+                            } finally {
+                                os.close();
+                            }
+                            processingEnv.getMessager().printMessage(Kind.NOTE, "Indexing " + cnt + " HTML files in " + d + " into " + out);
+                            File db = createTempFile("jhindexer-out", "");
+                            db.delete();
+                            db.mkdir();
+                            try {
+                                Indexer.main(new String[]{
+                                        "-c", config.getAbsolutePath(),
+                                        "-db", db.getAbsolutePath()
+                                });
+                            } finally {
+                                for (File f : db.listFiles()) {
+                                    FileObject dest = processingEnv.getFiler().createResource(StandardLocation.CLASS_OUTPUT, "", out + f.getName(), e);
+                                    os = dest.openOutputStream();
+                                    try {
+                                        InputStream is = new FileInputStream(f);
+                                        try {
+                                            FileUtil.copy(is, os);
+                                        } finally {
+                                            is.close();
+                                        }
+                                    } finally {
+                                        os.close();
+                                    }
+                                    f.delete();
+                                }
+                                db.delete();
+                            }
+                        } finally {
+                            config.delete();
+                        }
+                    } catch (Exception x) {
+                        processingEnv.getMessager().printMessage(Kind.ERROR, "Could not run indexer: " + x, e);
+                    }
+                } else {
+                    processingEnv.getMessager().printMessage(Kind.ERROR, "Cannot run indexer on non-local files: " + loc, e);
+                }
+            }
+            // XXX try to port CheckHelpSets
+        }
+        return true;
+    }
+
+}
Index: target/classes/META-INF/services/org.openide.util.HelpCtx.Displayer
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/META-INF/services/org.openide.util.HelpCtx.Displayer b/target/classes/META-INF/services/org.openide.util.HelpCtx.Displayer
new file mode 100644
--- /dev/null	(date 1683619034459)
+++ b/target/classes/META-INF/services/org.openide.util.HelpCtx.Displayer	(date 1683619034459)
@@ -0,0 +1,1 @@
+eu.esa.snap.netbeans.javahelp.JavaHelp
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1683622902757)
+++ b/.idea/workspace.xml	(date 1683622902757)
@@ -0,0 +1,169 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="d0675da0-f168-468e-9652-f3368fde0dc9" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LICENSE2" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/AbstractHelp.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayer.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/BrowserDisplayerBeanInfo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/CopyLinkLocationAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/HelpAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/HelpConstants.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/HelpCtxProcessor.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetProcessor.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/HelpSetRegistrationProcessor.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/HyperlinkEventProcessor.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/Installer.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelp.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuery.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/JavaHelpQuickSearchProviderImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/NbDocsStreamHandler.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/Utils.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/api/Help.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpSetRegistration.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpUtils.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/nbm/manifest.mf" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/META-INF/services/org.openide.util.HelpCtx.Displayer" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/Bundle.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/help.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/help24.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/help32x32.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpviewer_back.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpviewer_book-closed.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpviewer_book-open.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpviewer_forward.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpviewer_page-setup.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpviewer_print.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/helpviewer_topic.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/layer.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/master-help.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/show-help.gif" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/META-INF/MANIFEST.MF" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/META-INF/generated-layer.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/META-INF/namedservices/URLStreamHandler/nbdocs/java.net.URLStreamHandler" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/META-INF/services/javax.annotation.processing.Processor" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/META-INF/services/org.openide.util.HelpCtx.Displayer" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/Bundle.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/favorites_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/help.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/help24.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/help32x32.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpcontext-1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpset_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpsetref-1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpviewer_back.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpviewer_book-closed.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpviewer_book-open.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpviewer_forward.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpviewer_page-setup.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpviewer_print.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/helpviewer_topic.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/index_1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/index_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/layer.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/map_1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/master-help.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpMap.jhm" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpSet.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/show-help.gif" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_1_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/eu/esa/snap/netbeans/javahelp/resources/toc_2_0.dtd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/maven-archiver/pom.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/nbm/netbeans/extra/config/Modules/eu-esa-snap-netbeans-snap-help-system.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/nbm/netbeans/extra/update_tracking/eu-esa-snap-netbeans-snap-help-system.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/nbm/snap-help-system-1.0.0.nbm" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/snap-help-system-1.0.0.nbm" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/LICENSE" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="MavenImportPreferences">
+    <option name="generalSettings">
+      <MavenGeneralSettings>
+        <option name="useMavenConfig" value="true" />
+      </MavenGeneralSettings>
+    </option>
+  </component>
+  <component name="ProjectId" id="2PY7YqXZuEYpwoBSLYidPQxF8zH" />
+  <component name="ProjectViewState">
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "main",
+    "last_opened_file_path": "C:/Users/Marco/Projects/IdeaProjects/senbox/snap-help-system",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\Marco\Projects\IdeaProjects\senbox\snap-help-system" />
+    </key>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="d0675da0-f168-468e-9652-f3368fde0dc9" name="Changes" comment="" />
+      <created>1683622211123</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1683622211123</updated>
+      <workItem from="1683622212346" duration="690000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	(date 1683622034801)
+++ b/pom.xml	(date 1683622034801)
@@ -0,0 +1,157 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>eu.esa.snap.netbeans</groupId>
+    <artifactId>snap-help-system</artifactId>
+    <version>1.0.0</version>
+    <packaging>nbm</packaging>
+
+    <name>SNAP-NetBeans Help System</name>
+    <description>The SNAP help system based on NetBeans</description>
+
+    <properties>
+        <maven.compiler.source>11</maven.compiler.source>
+        <maven.compiler.target>11</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+        <netbeans.version>RELEASE113</netbeans.version>
+        <javahelp.version>2.0.05</javahelp.version>
+    </properties>
+
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.netbeans.utilities</groupId>
+                <artifactId>nbm-maven-plugin</artifactId>
+                <version>4.4</version>
+                <extensions>true</extensions>
+                <configuration>
+                    <licenseName>GPL 3</licenseName>
+                    <licenseFile>LICENSE.txt</licenseFile>
+                    <publicPackages>
+                        <publicPackage>eu.esa.snap.netbeans.javahelp.api.*</publicPackage>
+                    </publicPackages>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-jar-plugin</artifactId>
+                <version>3.3.0</version>
+                <configuration>
+                    <archive>
+                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
+                    </archive>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <version>3.11.0</version>
+            </plugin>
+        </plugins>
+    </build>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-awt</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-filesystems</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-loaders</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-modules</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-windows</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-util-ui</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-util</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-util-lookup</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-nodes</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-netbeans-api-progress</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-netbeans-api-progress-nb</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-netbeans-spi-quicksearch</artifactId>
+            <version>${netbeans.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>javax.help</groupId>
+            <artifactId>javahelp</artifactId>
+            <version>${javahelp.version}</version>
+        </dependency>
+    </dependencies>
+
+
+    <repositories>
+        <repository>
+            <id>snap-repo-public</id>
+            <name>Public Maven Repository for SNAP</name>
+            <url>https://nexus.snap-ci.ovh/repository/snap-maven-public/</url>
+            <releases>
+                <enabled>true</enabled>
+                <checksumPolicy>warn</checksumPolicy>
+            </releases>
+            <snapshots>
+                <enabled>true</enabled>
+                <checksumPolicy>warn</checksumPolicy>
+            </snapshots>
+        </repository>
+    </repositories>
+
+    <distributionManagement>
+        <repository>
+            <id>snap-repo-public</id>
+            <name>Public Maven Repository for SNAP</name>
+            <url>https://nexus.snap-ci.ovh/repository/snap-maven-releases/</url>
+            <uniqueVersion>false</uniqueVersion>
+        </repository>
+        <snapshotRepository>
+            <id>snap-repo-public</id>
+            <name>Public Maven Snapshot Repository for SNAP</name>
+            <url>https://nexus.snap-ci.ovh/repository/snap-maven-snapshot/</url>
+            <uniqueVersion>false</uniqueVersion>
+        </snapshotRepository>
+    </distributionManagement>
+
+</project>
\ No newline at end of file
Index: src/main/nbm/manifest.mf
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/nbm/manifest.mf b/src/main/nbm/manifest.mf
new file mode 100644
--- /dev/null	(date 1683619289774)
+++ b/src/main/nbm/manifest.mf	(date 1683619289774)
@@ -0,0 +1,12 @@
+Manifest-Version: 1.0
+AutoUpdate-Show-In-Client: false
+AutoUpdate-Essential-Module: true
+OpenIDE-Module-Java-Dependencies: Java > 11
+OpenIDE-Module-Layer: eu/esa/snap/netbeans/javahelp/resources/layer.xml
+OpenIDE-Module-Install: eu/esa/snap/netbeans/javahelp/Installer.class
+OpenIDE-Module-Long-Description: <p>Provides the software user manual.
+ </p><p><b>Vendor:</b> Brockmann Consult GmbH</p><p><b>Contact address
+ :</b> Chrysanderstr. 1, 21029 Hamburg (Germany)</p><p><b>Copyrigh
+ t:</b> (C) 2014 by Brockmann Consult GmbH</p><p><b>Vendor:</b> Brockm
+ ann Consult GmbH</p><p><b>License:</b> http://www.gnu.org/licenses/gp
+ l.html</p>
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties b/target/classes/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties
new file mode 100644
--- /dev/null	(date 1683618645240)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/Bundle.properties	(date 1683618645240)
@@ -0,0 +1,25 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#   http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+OpenIDE-Module-Name=JavaHelp Integration
+OpenIDE-Module-Display-Category=Infrastructure
+OpenIDE-Module-Short-Description=Permits JavaHelp help sets to be added to the IDE.
+OpenIDE-Module-Long-Description=\
+    Contains the actual JavaHelp runtime library, and the implementation of the part of \
+    the Modules API which permits other modules to install help sets using JavaHelp technology.
+Menu/Help/master-help.xml=Help &Contents
+Menu/Help/HelpShortcuts=Help &Sets
+Actions/Help/master-help.xml=Help &Contents
Index: target/classes/META-INF/services/javax.annotation.processing.Processor
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/META-INF/services/javax.annotation.processing.Processor b/target/classes/META-INF/services/javax.annotation.processing.Processor
new file mode 100644
--- /dev/null	(date 1683622264836)
+++ b/target/classes/META-INF/services/javax.annotation.processing.Processor	(date 1683622264836)
@@ -0,0 +1,1 @@
+eu.esa.snap.netbeans.javahelp.HelpSetRegistrationProcessor
Index: src/main/java/eu/esa/snap/netbeans/javahelp/api/Help.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/api/Help.java b/src/main/java/eu/esa/snap/netbeans/javahelp/api/Help.java
new file mode 100644
--- /dev/null	(date 1683618975176)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/api/Help.java	(date 1683618975176)
@@ -0,0 +1,87 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package eu.esa.snap.netbeans.javahelp.api;
+
+import org.openide.util.HelpCtx;
+
+import javax.swing.event.ChangeListener;
+
+/**
+ * An implementation of the JavaHelp system.
+ * Get the concrete instance using lookup.
+ *
+ * @author Jaroslav Tulach, Jesse Glick
+ */
+public abstract class Help {
+
+    /**
+     * constructor for subclasses
+     */
+    protected Help() {
+    }
+
+    /**
+     * Test whether a given ID is valid in some known helpset.
+     * In lazy mode, should be a fast operation; if in doubt say you do not know.
+     *
+     * @param id    the ID to check for validity
+     * @param force if false, do not do too much work (be lazy) and if necessary return null;
+     *              if true, must return non-null (meaning the call may block loading helpsets)
+     * @return whether it is valid, if this is known; else may be null (only permitted when force is false)
+     */
+    public abstract Boolean isValidID(String id, boolean force);
+
+    /**
+     * Shows help.
+     * <p>Note that for basic usage it may suffice to call {@link HelpCtx#display},
+     * avoiding any direct dependency on this module.
+     *
+     * @param ctx help context
+     */
+    public void showHelp(HelpCtx ctx) {
+        showHelp(ctx, /* #15711 */true);
+    }
+
+    /**
+     * Shows help.
+     *
+     * @param ctx        help context
+     * @param showmaster whether to force the master helpset
+     *                   to be shown (full navigators) even
+     *                   though the supplied ID only applies
+     *                   to one subhelpset
+     */
+    public abstract void showHelp(HelpCtx ctx, boolean showmaster);
+
+    /**
+     * Add a change listener for when help sets change.
+     *
+     * @param l the listener to add
+     */
+    public abstract void addChangeListener(ChangeListener l);
+
+    /**
+     * Remove a change listener.
+     *
+     * @param l the listener to remove
+     */
+    public abstract void removeChangeListener(ChangeListener l);
+
+}
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html b/target/classes/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html
new file mode 100644
--- /dev/null	(date 1683618646669)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html	(date 1683618646669)
@@ -0,0 +1,39 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<html>
+<head>
+    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
+    <title>Module Not Enabled</title>
+    <link href="nbdocs://org.netbeans.modules.usersguide/org/netbeans/modules/usersguide/ide.css" rel="StyleSheet"
+          type="text/css">
+</head>
+<body>
+<h2>Module Not Enabled</h2>
+<p>The help topic you are trying to view is located in the {0} module,
+    which is currently turned off. To turn on installed but deactivated
+    modules:</p>
+<ol>
+    <li>Choose Tools > Plugins (NetBeans Preferences on Mac).</li>
+    <li>Go to the Installed tab.</li>
+    <li>Select the {0} module and click Activate.</li>
+</ol>
+</body>
+</html>
Index: src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpUtils.java b/src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpUtils.java
new file mode 100644
--- /dev/null	(date 1683618975140)
+++ b/src/main/java/eu/esa/snap/netbeans/javahelp/api/HelpUtils.java	(date 1683618975140)
@@ -0,0 +1,52 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package eu.esa.snap.netbeans.javahelp.api;
+
+import eu.esa.snap.netbeans.javahelp.HelpConstants;
+
+import javax.help.HelpSet;
+
+/**
+ * Utility methods for helpsets.
+ *
+ * @author jhavlin
+ * @since javahelp/2.34
+ */
+public final class HelpUtils {
+
+    /**
+     * Merge a custom helpset to the master helpset.
+     * <p>
+     * Merge helpsets registered using e.g.
+     * {@code @ServiceProvider(service=HelpSet.class)} to the master helpset.
+     * </p>
+     * <p>
+     * You may need this method if you create helpsets that use some special
+     * sources of data, e.g. the web. See bug 234144.
+     * </p>
+     *
+     * @param customHelpSet The custom help set.
+     */
+    public static void mergeCustomHelpset(HelpSet customHelpSet) {
+        customHelpSet.setKeyData(
+                HelpConstants.HELPSET_MERGE_CONTEXT,
+                HelpConstants.HELPSET_MERGE_ATTR,
+                true);
+    }
+}
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/layer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/layer.xml b/target/classes/eu/esa/snap/netbeans/javahelp/resources/layer.xml
new file mode 100644
--- /dev/null	(date 1683621127032)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/layer.xml	(date 1683621127032)
@@ -0,0 +1,123 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.1//EN" "https://www.netbeans.org/dtds/filesystem-1_1.dtd">
+<filesystem>
+    <folder name="Menu">
+        <folder name="Help">
+            <file name="master-help.xml" url="master-help.xml">
+                <attr name="SystemFileSystem.localizingBundle" stringvalue="eu.esa.snap.netbeans.javahelp.resources.Bundle"/>
+                <attr name="position" intvalue="200"/>
+            </file>
+        </folder>
+    </folder>
+    <folder name="Actions">
+        <folder name="Help">
+            <file name="master-help.xml" url="master-help.xml">
+                <attr name="SystemFileSystem.localizingBundle" stringvalue="eu.esa.snap.netbeans.javahelp.resources.Bundle"/>
+                <attr name="iconBase" stringvalue="eu/esa/snap/netbeans/javahelp/resources/help.png"/>
+            </file>
+        </folder>
+    </folder>
+    <folder name="Services">
+        <folder name="JavaHelp">
+            <attr name="hidden" boolvalue="false"/>
+        </folder>
+    </folder>
+    <folder name="xml">
+        <folder name="entities">
+            <folder name="Sun_Microsystems_Inc_">
+                <file name="DTD_JavaHelp_HelpSet_Version_1_0" url="helpset_1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 1.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Map_Version_1_0" url="map_1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Map Version 1.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_TOC_Version_1_0" url="toc_1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp TOC Version 1.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Index_Version_1_0" url="index_1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Index Version 1.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_HelpSet_Version_2_0" url="helpset_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 2.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Map_Version_2_0" url="map_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Map Version 2.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_TOC_Version_2_0" url="toc_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp TOC Version 2.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Index_Version_2_0" url="index_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Index Version 2.0//EN"/>
+                </file>
+                <file name="DTD_JavaHelp_Favorites_Version_2_0" url="favorites_2_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//Sun Microsystems Inc.//DTD JavaHelp Favorites Version 2.0//EN"/>
+                </file>
+            </folder>
+            <folder name="NetBeans">
+                <file name="DTD_JavaHelp_Help_Set_Reference_1_0" url="helpsetref-1_0.dtd">
+                    <attr name="hint.originalPublicID"
+                          stringvalue="-//NetBeans//DTD JavaHelp Help Set Reference 1.0//EN"/>
+                </file>
+                <file name="DTD_Help_Context_1_0" url="helpcontext-1_0.dtd">
+                    <attr name="hint.originalPublicID" stringvalue="-//NetBeans//DTD Help Context 1.0//EN"/>
+                </file>
+            </folder>
+        </folder>
+        <folder name="lookups">
+            <folder name="NetBeans">
+                <file name="DTD_JavaHelp_Help_Set_Reference_1_0.instance">
+                    <attr name="instanceOf" stringvalue="org.openide.loaders.Environment$Provider"/>
+                    <attr name="instanceCreate" newvalue="eu.esa.snap.netbeans.javahelp.HelpSetProcessor"/>
+                </file>
+                <file name="DTD_Help_Context_1_0.instance">
+                    <attr name="instanceOf" stringvalue="org.openide.loaders.Environment$Provider"/>
+                    <attr name="instanceCreate" newvalue="eu.esa.snap.netbeans.javahelp.HelpCtxProcessor"/>
+                </file>
+            </folder>
+        </folder>
+    </folder>
+
+    <folder name="QuickSearch">
+        <folder name="Help">
+            <!--              Attribute for localization - provide localized display name of category!-->
+            <attr name="SystemFileSystem.localizingBundle" stringvalue="eu.esa.snap.netbeans.javahelp.Bundle"/>
+            <!--              Attribute for command prefix - used to narrow search to this category only!-->
+            <attr name="command" stringvalue="h"/>
+            <!--              Attribute for category ordering!-->
+            <attr name="position" intvalue="1000"/>
+            <!--              Note that multiple providers can contribute to one category!-->
+            <file name="eu-esa-snap-netbeans-javahelp-JavaHelpQuickSearchProviderImpl.instance">
+                <attr name="displayName" stringvalue="SNAP Help"/>
+            </file>
+        </folder>
+    </folder>
+</filesystem>
Index: LICENSE2
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LICENSE2 b/LICENSE2
new file mode 100644
--- /dev/null	(date 1683622897600)
+++ b/LICENSE2	(date 1683622897600)
@@ -0,0 +1,208 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
+********************************************************************************
+Apache NetBeans repository includes a number of source files that are not
+covered by the Apache license. These files are refered to by licenseinfo.xml
+files which hold the license information.
+********************************************************************************
\ No newline at end of file
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml b/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml
new file mode 100644
--- /dev/null	(date 1683618645299)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpToc.xml	(date 1683618645299)
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding="UTF-8"?>
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<!DOCTYPE toc PUBLIC "-//Sun Microsystems Inc.//DTD JavaHelp TOC Version 2.0//EN"
+        "http://java.sun.com/products/javahelp/toc_2_0.dtd">
+<toc version="2.0" categoryclosedimage="helpviewer_book-closed" categoryopenimage="helpviewer_book-open"
+     topicimage="helpviewer_topic">
+</toc>
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd b/target/classes/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd
new file mode 100644
--- /dev/null	(date 1683618645352)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/map_2_0.dtd	(date 1683618645352)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+        <!--
+
+            Licensed to the Apache Software Foundation (ASF) under one
+            or more contributor license agreements.  See the NOTICE file
+            distributed with this work for additional information
+            regarding copyright ownership.  The ASF licenses this file
+            to you under the Apache License, Version 2.0 (the
+            "License"); you may not use this file except in compliance
+            with the License.  You may obtain a copy of the License at
+
+              http://www.apache.org/licenses/LICENSE-2.0
+
+            Unless required by applicable law or agreed to in writing,
+            software distributed under the License is distributed on an
+            "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+            KIND, either express or implied.  See the License for the
+            specific language governing permissions and limitations
+            under the License.
+
+        -->
+
+
+        <!-- A Map.  It is versioned -->
+
+        <!ELEMENT map (mapID*)>
+        <!ATTLIST map version (1.0 | 2.0) #IMPLIED>
+        <!ATTLIST map xml:lang CDATA #IMPLIED>
+
+        <!-- an map ID pair -->
+
+        <!ELEMENT mapID EMPTY>
+        <!ATTLIST mapID xml:lang CDATA #IMPLIED>
+        <!ATTLIST mapID target CDATA #REQUIRED>
+        <!ATTLIST mapID url CDATA #REQUIRED>
+
+        <!--
+          Change list:
+
+          Created - epll, 16 Dec '98
+
+          Added the version 2.0 update
+         -->
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html
new file mode 100644
--- /dev/null	(date 1683618646669)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notEnabledModule.html	(date 1683618646669)
@@ -0,0 +1,39 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<html>
+<head>
+    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
+    <title>Module Not Enabled</title>
+    <link href="nbdocs://org.netbeans.modules.usersguide/org/netbeans/modules/usersguide/ide.css" rel="StyleSheet"
+          type="text/css">
+</head>
+<body>
+<h2>Module Not Enabled</h2>
+<p>The help topic you are trying to view is located in the {0} module,
+    which is currently turned off. To turn on installed but deactivated
+    modules:</p>
+<ol>
+    <li>Choose Tools > Plugins (NetBeans Preferences on Mac).</li>
+    <li>Go to the Installed tab.</li>
+    <li>Select the {0} module and click Activate.</li>
+</ol>
+</body>
+</html>
Index: target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html b/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html
new file mode 100644
--- /dev/null	(date 1683618646674)
+++ b/target/classes/eu/esa/snap/netbeans/javahelp/resources/masterHelpPage.html	(date 1683618646674)
@@ -0,0 +1,33 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+
+<HTML>
+<head>
+    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
+    <TITLE>Master Index</TITLE>
+</HEAD>
+<BODY>
+This window contains the master set of all installed documentation.
+You can use the navigators to the left to browse the IDE's complete
+table of contents and index, and perform whole-documentation search
+on the index and full-text search.
+</BODY>
+</HTML>
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html
new file mode 100644
--- /dev/null	(date 1683618646662)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/resources/notInstalledModule.html	(date 1683618646662)
@@ -0,0 +1,36 @@
+<!--
+
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<html>
+<head>
+    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
+    <title>Module Not Installed</title>
+    <link href="nbdocs://org.netbeans.modules.usersguide/org/netbeans/modules/usersguide/ide.css" rel="StyleSheet"
+          type="text/css">
+</head>
+<body>
+<h2>Module Not Installed</h2>
+<p>The help topic you are trying to view is located in the {0} module,
+    which is not currently installed. This module might be available
+    as a plugin. To check, choose
+    Tools &gt; Plugins.
+</p>
+</body>
+</html>
Index: src/main/resources/eu/esa/snap/netbeans/javahelp/Bundle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/eu/esa/snap/netbeans/javahelp/Bundle.properties b/src/main/resources/eu/esa/snap/netbeans/javahelp/Bundle.properties
new file mode 100644
--- /dev/null	(date 1683621319669)
+++ b/src/main/resources/eu/esa/snap/netbeans/javahelp/Bundle.properties	(date 1683621319669)
@@ -0,0 +1,47 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#   http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# Help system
+# {0} - URL
+EXC_nbdocs_cannot_connect=Could not connect to URL {0}; no such resource was found.
+# JavaHelp
+# {0} - ID
+MSG_jh_id_not_found=Warning: the JavaHelp topic ID {0} was not found.
+#LBL_Empty_HelpComponent=<JavaHelp not found>
+# master index menu item
+#LBL_MasterIndex=Master Index
+TITLE_loading_help_sets=Loading help sets...
+ACSD_JavaHelp_viewer=Displays one or more online help references in JavaHelp format
+ACSD_Loading_Dialog=Loading help sets
+# HelpAction
+LBL_HelpAction=Help
+CTL_OpeningHelp=Opening Help...
+# Display name of known modules
+org.netbeans.modules.web.monitor=HTTP Monitor
+# a11y - BrowserDisplayer
+ACSD_Label=Click here to open this link in a web browser.
+# log messages
+# {0} HelpCtx of the help to be shown
+LOG_SHOWING_HELP=Showing help ID: {0}
+#NOI18N
+LOG_SHOWING_HELP_ICON_BASE=eu/esa/snap/netbeans/javahelp/resources/help.png
+# usage logging
+# {0} HelpCtx of the help to be shown
+USG_HELP_SHOW=Showing help ID: {0}
+QuickSearch/Help=Help
+Err_CreateJavaHelpSearchEngine=Failed to create JavaHelp search engine.
+# Copy link location action
+LBL_CopyLinkLocationAction=Copy Link Location
Index: src/main/resources/META-INF/services/org.openide.util.HelpCtx.Displayer
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/META-INF/services/org.openide.util.HelpCtx.Displayer b/src/main/resources/META-INF/services/org.openide.util.HelpCtx.Displayer
new file mode 100644
--- /dev/null	(date 1683619034459)
+++ b/src/main/resources/META-INF/services/org.openide.util.HelpCtx.Displayer	(date 1683619034459)
@@ -0,0 +1,1 @@
+eu.esa.snap.netbeans.javahelp.JavaHelp
Index: src/main/resources/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help b/src/main/resources/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help
new file mode 100644
--- /dev/null	(date 1683619034454)
+++ b/src/main/resources/META-INF/services/eu.esa.snap.netbeans.javahelp.api.Help	(date 1683619034454)
@@ -0,0 +1,1 @@
+eu.esa.snap.netbeans.javahelp.JavaHelp
